# OLD Releng macros
---
- property:
    name: opendaylight-infra-properties
    properties:
      - build-discarder:
          days-to-keep: '{build-days-to-keep}'
          num-to-keep: 40
          # Need to keep artifacts for at least 1 day as some projects need to
          # be able to validate their artifacts and only allowing limited
          # number of artifacts could make fast moving jobs lost their
          # artifacts before the developers can test it.
          artifact-days-to-keep: 1

- parameter:
    name: opendaylight-infra-parameters
    parameters:
      - string:
          name: PROJECT
          default: '{project}'
          description: 'Parameter to identify an ODL Gerrit project'
      - string:
          name: ARCHIVE_ARTIFACTS
          # Before adding more here, beware of https://jira.linuxfoundation.org/browse/RELENG-280
          default: >
              {artifacts}
              **/target/surefire-reports/*-output.txt
              **/target/failsafe-reports/failsafe-summary.xml
              **/hs_err_*.log
              **/target/feature/feature.xml
          # TODO: **/*.hprof is too large, compress with xz first
          description: 'Space separated glob patterns for artifacts to archive into logs.opendaylight.org'
      - string:
          name: GERRIT_PROJECT
          default: '{project}'
          description: "GERRIT_PROJECT parameter if not given by trigger"
      - string:
          name: GERRIT_BRANCH
          default: '{branch}'
          description: "JJB configured GERRIT_BRANCH parameter"
      - string:
          name: GERRIT_REFSPEC
          default: '{refspec}'
          description: |
              Gerrit reference to checkout (ex: refs/heads/master,
              refs/changes/48/61548/1 where 61548 is Gerrit change ID, 1 is
              patch number and 48 is last two digits of change ID)
      - string:
          name: STACK_NAME
          default: '$SILO-$JOB_NAME-$BUILD_NUMBER'
          description: "Used by Heat to generate a unique stack & vm name"
      - string:
          name: OS_CLOUD
          default: '{os-cloud}'
          description: |
              The name of a cloud configuration in clouds.yaml. OS_CLOUD is a
              variable name that is significant to openstack client as a
              environment variable. Please refer to the documentation for
              further details.
              https://docs.openstack.org/developer/python-openstackclient/

- parameter:
    name: patches-to-build-parameter
    parameters:
      - string:
          name: PATCHES_TO_BUILD
          default: ''
          description: |
              Ordered list of patches to build in the format of project=changeset (checkout) or
              project:changeset (cherry-pick) for example: genius=32/53632/9,netvirt:59/50259/47.
              A topic is also allowed, for example: topic=binding-tlc-rpc

- parameter:
    name: build-order-parameter
    parameters:
      - string:
          name: BUILD_ORDER
          default: '{build-order}'
          description: 'Build order for multipatch test when topic is used'

- parameter:
    name: build-fast-parameter
    parameters:
      - string:
          name: BUILD_FAST
          default: '{build-fast}'
          description: 'Set true to build fast -Pq'

- parameter:
    name: run-test-parameter
    parameters:
      - string:
          name: RUN_TEST
          default: '{run-test}'
          description: 'Set true to run test after build'

- parameter:
    name: distribution-branch-to-build-parameter
    parameters:
      - string:
          name: DISTRIBUTION_BRANCH_TO_BUILD
          default: 'master'
          description: 'distribution repo branch to build with'

- parameter:
    name: maven-exec
    parameters:
      - string:
          name: MVN
          default: '/w/tools/hudson.tasks.Maven_MavenInstallation/{maven-version}/bin/mvn'
          description: 'Maven selector to be used by shell scripts'

- scm:
    name: git-scm
    scm:
      - git:
          credentials-id: 'opendaylight-jenkins-ssh'
          url: '$GIT_BASE'
          refspec: ''
          branches:
            - 'origin/{branch}'
          skip-tag: true
          wipe-workspace: true

- scm:
    name: git-scm-with-submodules
    scm:
      - git:
          credentials-id: 'opendaylight-jenkins-ssh'
          url: '$GIT_BASE'
          refspec: ''
          branches:
            - 'refs/heads/{branch}'
          skip-tag: true
          wipe-workspace: true
          submodule:
            recursive: true

- scm:
    name: gerrit-trigger-scm
    scm:
      - git:
          credentials-id: 'opendaylight-jenkins-ssh'
          url: '$GIT_BASE'
          refspec: '{refspec}'
          branches:
            - 'origin/$GERRIT_BRANCH'
          skip-tag: true
          choosing-strategy: '{choosing-strategy}'

# This is a single macro to use for all jobs who vote on every (relevant) patch set.
# Only 'recheck' trigger word is supported, it always triggers the full set of relevant jobs,
# in order to prevent Jenkins from starting only a subset and still voting Verified+1.
# Arguments:
#     gerrit-server-name: name of gerrit server to listen to
#     project: pattern to match triggering projects
#     branch: triggering branch name
#     files: pattern to match triggering filepaths
- trigger:
    name: gerrit-trigger-patch-submitted
    triggers:
      - gerrit:
          server-name: '{gerrit-server-name}'
          trigger-on:
            - patchset-created-event:
                exclude-drafts: true
                exclude-trivial-rebase: false
                exclude-no-code-change: false
            - draft-published-event
            - comment-added-contains-event:
                comment-contains-value: '^Patch Set[ ]+[0-9]+:([ ]+|[\n]+)(recheck|reverify)$'
          projects:
            - project-compare-type: ANT
              project-pattern: '{project}'
              branches:
                - branch-compare-type: ANT
                  branch-pattern: '**/{branch}'
              file-paths:
                - compare-type: ANT
                  pattern: '{files}'
              forbidden-file-paths:
                - compare-type: ANT
                  pattern: '{forbidden-files}'

# TODO: Unify argument names across gerrit-trigger-* macros.
- trigger:
    name: gerrit-trigger-patch-merged
    triggers:
      - gerrit:
          server-name: '{gerrit-server-name}'
          trigger-on:
            - change-merged-event
            - comment-added-contains-event:
                comment-contains-value: 'remerge$'
          projects:
            - project-compare-type: 'ANT'
              project-pattern: '{name}'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/{branch}'
              file-paths:
                - compare-type: ANT
                  pattern: '{files}'
              forbidden-file-paths:
                - compare-type: ANT
                  pattern: '{forbidden-files}'
          skip-vote:
            successful: true
            failed: true
            unstable: true
            notbuilt: true
          # Force Jenkins always vote the values it should already have voted
          # during the prior verify phase
          override-votes: true
          gerrit-build-started-verified-value: 1
          gerrit-build-successful-verified-value: 1
          gerrit-build-failed-verified-value: 1
          gerrit-build-unstable-verified-value: 1
          gerrit-build-notbuilt-verified-value: 1
          gerrit-build-started-codereview-value: 0
          gerrit-build-successful-codereview-value: 0
          gerrit-build-failed-codereview-value: 0
          gerrit-build-unstable-codereview-value: 0
          gerrit-build-notbuilt-codereview-value: 0

- publisher:
    name: email-notification
    publishers:
      - email-ext:
          recipients: '{email-recipients}'
          reply-to: ''
          content-type: default
          subject: '{email-prefix} $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!'
          body: |
              $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

              Please refer to the logs server URL for console logs when possible
              and use the Jenkins Build URL as a last resort.

              Console Logs URL:
              https://logs.opendaylight.org/$SILO/$JENKINS_HOSTNAME/$JOB_NAME/$BUILD_NUMBER

              Jenkins Build URL:
              $BUILD_URL
          unstable: true
          fixed: true
          send-to:
            - recipients

- builder:
    name: opendaylight-infra-stack
    # opendaylight-infra-stack.sh has a required variable {stack-template} that
    # must be passed into this macro.
    builders:
      - shell: !include-raw: opendaylight-infra-stack.sh
      - shell: !include-raw-escape: opendaylight-infra-copy-ssh-keys.sh

- builder:
    name: opendaylight-apex-stack
    # opendaylight-apex-stack.sh has a required variable {stack-template} that
    # must be passed into this macro.
    builders:
      - shell: !include-raw: opendaylight-infra-stack.sh

- builder:
    name: distribute-build-url
    # Place URL of the current run of a build job to a file at given path.
    builders:
      - shell: |
          #!/bin/bash
          set +e  # DO NOT fail script if command returns non-zero.

          echo "$BUILD_URL" > {path}/build.url

          # DO NOT fail the build if the echo failed.
          exit 0

- builder:
    name: wipe-org-opendaylight-repo
    builders:
      - shell: 'if [ -d /tmp/r/org/opendaylight ]; then rm -rf /tmp/r/org/opendaylight; fi'

- builder:
    name: wipe-local-maven-repo
    builders:
      - shell: 'if [ -d /tmp/r ]; then rm -rf /tmp/r; fi'

- publisher:
    name: releng-openstack-stack-delete
    publishers:
      - postbuildscript:
          builders:
            - role: BOTH
              build-on:
                - ABORTED
                - FAILURE
                - SUCCESS
                - UNSTABLE
              build-steps:
                - shell: |
                    #!/bin/bash -l
                    echo "Deleting $STACK_NAME"
                    openstack stack delete --yes "$STACK_NAME"
          mark-unstable-if-failed: false

- wrapper:
    # This wrapper is required for all jobs as it configures the wrappers
    # needed by OpenDaylight infra.
    name: opendaylight-infra-wrappers
    wrappers:
      - mask-passwords
      - config-file-provider:
          files:
            - file-id: npmrc
              target: '$HOME/.npmrc'
            - file-id: pipconf
              target: '$HOME/.config/pip/pip.conf'
            - file-id: clouds-yaml
              target: '$HOME/.config/openstack/clouds.yaml'
      - timeout:
          type: absolute
          timeout: '{build-timeout}'
          timeout-var: 'BUILD_TIMEOUT'
          fail: true
      - timestamps
      - ssh-agent-credentials:
          users:
            - 'opendaylight-jenkins-ssh'
      - openstack:
          single-use: true

- publisher:
    name: opendaylight-infra-generate-csit-status-report
    publishers:
      - postbuildscript:
          builders:
            - role: BOTH
              build-on:
                - ABORTED
                - FAILURE
                - NOT_BUILT
                - SUCCESS
                - UNSTABLE
              build-steps:
                - shell: !include-raw: generate-csit-status-report.sh
          mark-unstable-if-failed: true
