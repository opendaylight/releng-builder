# OLD Releng macros

- parameter:
    name: opendaylight-infra-parameters
    parameters:
        - string:
            name: PROJECT
            default: '{project}'
            description: 'Parameter to identify an ODL Gerrit project'
        - string:
            name: ARCHIVE_ARTIFACTS
            default: '{artifacts} **/target/surefire-reports/*-output.txt'
            description: 'Space separated glob patterns for artifacts to archive into logs.opendaylight.org'
        - string:
            name: GERRIT_PROJECT
            default: '{project}'
            description: "GERRIT_PROJECT parameter if not given by trigger"
        - string:
            name: GERRIT_BRANCH
            default: '{branch}'
            description: "JJB configured GERRIT_BRANCH parameter"
        - string:
            name: GERRIT_REFSPEC
            default: '{refspec}'
            description: "GERRIT_REFSPEC parameter if not given by trigger"

- parameter:
    name: build-tag
    parameters:
        - string:
            name: BUILD_TAG
            default: ''
            description: 'Tag in Git to checkout'

- parameter:
    name: controller-version-parameter
    parameters:
        - string:
            name: ODL_VERSION
            default: '{odl_version}'
            description: 'Controller version (for use with openstacks networking_odl project)'

- parameter:
    name: patches-to-build-parameter
    parameters:
        - string:
            name: PATCHES_TO_BUILD
            default: ''
            description: 'csv list of patches in project:changeset format to build distribution with'

- parameter:
    name: distribution-branch-to-build-parameter
    parameters:
        - string:
            name: DISTRIBUTION_BRANCH_TO_BUILD
            default: 'master'
            description: 'distribution repo branch to build with'

- parameter:
    name: p2zip-parameter
    parameters:
        - string:
            name: P2ZIP_URL
            default: ''
            description: 'Nexus staging profile id'

- parameter:
    name: stage-id-parameter
    parameters:
        - string:
            name: STAGING_PROFILE_ID
            default: '{stage-id}'
            description: 'Nexus staging profile id'

- parameter:
    name: maven-exec
    parameters:
      - string:
          name: MVN
          default: '$HOME/tools/hudson.tasks.Maven_MavenInstallation/{maven-version}/bin/mvn'
          description: 'Maven selector to be used by shell scripts'

- scm:
    name: git-scm
    scm:
        - git:
            credentials-id: 'opendaylight-jenkins-ssh'
            url: '$GIT_BASE'
            refspec: ''
            branches:
                - 'origin/{branch}'
            skip-tag: true
            wipe-workspace: true

- scm:
    name: git-scm-with-submodules
    scm:
        - git:
            credentials-id: 'opendaylight-jenkins-ssh'
            url: '$GIT_BASE'
            refspec: ''
            branches:
                - 'refs/heads/{branch}'
            skip-tag: true
            wipe-workspace: true
            submodule:
                recursive: true

- scm:
    name: gerrit-trigger-scm
    scm:
        - git:
            credentials-id: 'opendaylight-jenkins-ssh'
            url: '$GIT_BASE'
            refspec: '{refspec}'
            branches:
                - 'origin/$GERRIT_BRANCH'
            skip-tag: true
            choosing-strategy: '{choosing-strategy}'

- wrapper:
    name: build-timeout
    wrappers:
        - timeout:
            type: absolute
            timeout: 360
            fail: true

- trigger:
    name: gerrit-trigger-patch-submitted
    triggers:
        - gerrit:
            server-name: 'OpenDaylight'
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'false'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'false'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{name}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'

- trigger:
    name: gerrit-trigger-relevant-patch-submitted
    triggers:
        - gerrit:
            server-name: 'OpenDaylight'
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'true'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'true'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{name}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'

- trigger:
    name: gerrit-trigger-patch-merged
    triggers:
        - gerrit:
            server-name: 'OpenDaylight'
            trigger-on:
                - change-merged-event
                - comment-added-contains-event:
                    comment-contains-value: 'remerge'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{name}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'

- trigger:
    name: gerrit-trigger-patch-sonar
    triggers:
        - gerrit:
            server-name: 'OpenDaylight'
            trigger-on:
                - comment-added-contains-event:
                    comment-contains-value: 'run-sonar'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{name}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/master'
            skip-vote:
                successful: true
                failed: true
                unstable: true
                notbuilt: true

- trigger:
    name: gerrit-trigger-patch-site-merged
    triggers:
        - gerrit:
            server-name: 'OpenDaylight'
            trigger-on:
                - change-merged-event
                - comment-added-contains-event:
                    comment-contains-value: 'republish'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{name}'
                branches:
                    - branch-compare-type: 'ANT'
                      branch-pattern: '**/{branch}'

- publisher:
    name: archive-artifacts
    publishers:
        - archive:
            artifacts: '{artifacts}'
            allow-empty: true
            fingerprint: true
            latest-only: true

- publisher:
    name: email-notification
    publishers:
        - email-ext:
            recipients: 'jenkins@lists.opendaylight.org'
            reply-to:
            content-type: default
            subject: '{email-prefix} $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!'
            body: |
                $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

                Check console output at $BUILD_URL to view the results.
            unstable: true
            fixed: true
            send-to:
                - recipients

- publisher:
        name: jacoco-report
        publishers:
            - jacoco:
                exec-pattern: "**/**.exec"
                class-pattern: "**/classes"
                source-pattern: "**/src/main/java"
                exclusion-pattern: "**/gen/**,**/generated-sources/**,**/yang-gen**,**/pax/**"
                status-update: true
                targets:
                  - branch:
                      healthy: 10
                      unhealthy: 20
                  - method:
                      healthy: 50
                      unhealthy: 40

- publisher:
    name: opendaylight-infra-shiplogs
    # To archive things the job will need to create a "archives" directory in
    # the workspace and this macro will handle copying the contents of the
    # archives directory.
    #
    # Uses the build parameter ARCHIVE_ARTIFACTS if not empty to find files
    # to archive. You can pass globstar patterns for example "**/*.xml **/*.log"
    # as the archive pattern. This is a space separated list of files to archive.
    #
    # Also ensure that the workspace is cleaned up at the end of the build.
    publishers:
        - postbuildscript:
            builders:
                - shell: !include-raw: include-raw-deploy-archives.sh
                - maven-target:
                        maven-version: '{maven-version}'
                        pom: '.archives/deploy-archives.xml'
                        goals: 'clean deploy -V -B -q -Dmaven.repo.local=/tmp/r'
                        settings: 'jenkins-log-archives-settings'
                        settings-type: cfp
                        global-settings: 'odl-global-settings'
                        global-settings-type: cfp
                - description-setter:
                    regexp: '^Build logs: .*'
                # Cleanup after ourselves
                - wipe-org-opendaylight-repo
            script-only-if-succeeded: False
            script-only-if-failed: False
            mark-unstable-if-failed: True
        - workspace-cleanup:
            fail-build: false

- builder:
    name: wipe-org-opendaylight-repo
    builders:
        - shell: 'if [ -d /tmp/r/org/opendaylight ]; then rm -rf /tmp/r/org/opendaylight; fi'

- builder:
    name: wipe-local-maven-repo
    builders:
        - shell: 'if [ -d /tmp/r ]; then rm -rf /tmp/r; fi'

- builder:
    name: jacoco-nojava-workaround
    builders:
        - shell: 'mkdir -p $WORKSPACE/target/classes $WORKSPACE/jacoco/classes'

- builder:
    name: check-clm
    builders:
        - sonatype-clm:
            application-name: '{application-name}'

- builder:
    name: releng-check-unicode
    builders:
        - shell: |
            $WORKSPACE/scripts/check-unicode.sh jjb/

- builder:
    name: provide-maven-settings
    builders:
    - config-file-provider:
        files:
        - file-id: '{global-settings-file}'
          variable: 'GLOBAL_SETTINGS_FILE'
        - file-id: '{settings-file}'
          variable: 'SETTINGS_FILE'

- builder:
    name: releng-fetch-p2zip-if-necessary
    builders:
    - shell: |
        # Cleanup any existing zips and metadata before we download the new update site
        rm -f *.zip *.xml
    - conditional-step:
        condition-kind: strings-match
        condition-string1: '$P2ZIP_URL'
        condition-string2: ''
        condition-basedir: workspace
        steps:
            # TODO: Figure out latest snapshot version number to pull rather than hardcoding 1.1.1-SNAPSHOT
            - maven-target:
                maven-version: '{maven-version}'
                goals: 'org.apache.maven.plugins:maven-dependency-plugin:get org.apache.maven.plugins:maven-dependency-plugin:copy -V -B -Dartifact=org.opendaylight.yangide:org.opendaylight.yangide.update-site:1.1.1-SNAPSHOT:zip -DoutputDirectory=$WORKSPACE'
                settings: '{settings}'
                global-settings: '{global-settings}'

- builder:
    name: releng-generate-p2pom
    builders:
        - shell: !include-raw: include-raw-generate-p2pom.sh

- builder:
    name: releng-update-p2composite-metadata
    builders:
    - shell: !include-raw: include-raw-update-p2composite-metadata.sh
    - conditional-step:
        condition-kind: file-exists
        condition-filename: deploy-composite-repo.xml
        condition-basedir: workspace
        steps:
            - maven-target:
                maven-version: '{maven-version}'
                pom: 'deploy-composite-repo.xml'
                goals: 'clean deploy -V -B -Dmaven.repo.local=/tmp/r'
                settings: '{settings}'
                global-settings: '{global-settings}'

- builder:
    name: releng-stage-release
    builders:
        - shell: !include-raw: include-raw-stage-release.sh

- wrapper:
    # This wrapper is required for all jobs as it configures the wrappers
    # needed by OpenDaylight infra.
    name: opendaylight-infra-wrappers
    wrappers:
        - timeout:
            type: absolute
            timeout: '{build-timeout}'
            timeout-var: 'BUILD_TIMEOUT'
            fail: true
        - timestamps
        - ssh-agent-credentials:
            users:
                - 'opendaylight-jenkins-ssh'
        - jclouds:
            single-use: True
        - openstack:
            single-use: True

- builder:
    name: packer-validate
    builders:
        - config-file-provider:
            files:
                - file-id: 'packer-cloud-env'
                  variable: 'CLOUDENV'
        - shell: |
            cd packer
            export PACKER_LOG="yes" && \
            export PACKER_LOG_PATH="packer-validate.log" && \
                        packer.io validate -var-file=$CLOUDENV \
                         -var-file=../packer/vars/{platform}.json \
                         ../packer/templates/{template}.json

- builder:
    name: packer-build
    builders:
        - shell: |
            cd packer
            export PACKER_LOG="yes" && \
            export PACKER_LOG_PATH="packer-build.log" && \
                        packer.io build -var-file=$CLOUDENV \
                         -var-file=../packer/vars/{platform}.json \
                         ../packer/templates/{template}.json
