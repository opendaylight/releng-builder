- project:
    name: autorelease-projects
    jobs:
        - 'autorelease-release-{stream}'
        - 'autorelease-project-report-{stream}'

    stream:
    - carbon:
        next-release-tag: Carbon
        branch: 'master'
        jdk: 'openjdk8'
        integration-test: carbon
    - boron:
        next-release-tag: Boron-SR3
        branch: 'stable/boron'
        jdk: 'openjdk8'
        integration-test: boron
    - beryllium:
        next-release-tag: Beryllium-SR5
        branch: 'stable/beryllium'
        jdk: 'openjdk7'
        integration-test: beryllium

    project: 'releng/autorelease'
    archive-artifacts: '**/*.prop **/*.log **/patches/*.bundle **/patches/*.patch all-bundles.tar.gz'

###
# TODO: Remove this job once guava21 testing is complete
###

- project:
    name: autorelease-projects-guava21
    jobs:
        - 'autorelease-release-guava21-{stream}'

    stream:
    - carbon:
        next-release-tag: Carbon
        branch: 'master'
        jdk: 'openjdk8'
        integration-test: carbon

    project: 'releng/autorelease'
    archive-artifacts: '**/*.prop **/*.log **/patches/*.bundle **/patches/*.patch all-bundles.tar.gz'

- job-template:
    name: 'autorelease-release-guava21-{stream}'

    project-type: freestyle
    node: centos7-autorelease-4c-16g
    jdk: '{jdk}'

    properties:
        - opendaylight-infra-properties:
            build-days-to-keep: '30'

    parameters:
        - maven-exec:
            maven-version: 'mvn33'
        - opendaylight-infra-parameters:
            project: '{project}'
            branch: '{branch}'
            refspec: 'refs/heads/{branch}'
            artifacts: '{archive-artifacts}'
        - autorelease-release-tag:
            release-tag: '{next-release-tag}'
        - autorelease-release-branch:
            release-branch: '{branch}'

    scm:
        - git:
            credentials-id: 'opendaylight-jenkins-ssh'
            url: '$GIT_BASE'
            refspec: '$GERRIT_REFSPEC'
            branches:
                - '$GERRIT_BRANCH'
            choosing-strategy: 'gerrit'
            skip-tag: true
            submodule:
                recursive: true
                timeout: 60

    wrappers:
        - opendaylight-infra-wrappers:
            build-timeout: '1440'

    triggers:
        - timed: 'H 0 * * *'

    builders:
        - shell: |
            #!/bin/bash
            #  Would be nice if we could use git-review here instead...
            cd bgpcep
            git fetch https://git.opendaylight.org/gerrit/bgpcep refs/changes/84/50184/1 && git checkout FETCH_HEAD
            cd ..
            cd centinel
            git fetch https://git.opendaylight.org/gerrit/centinel refs/changes/85/50185/1 && git checkout FETCH_HEAD
            cd ..
            cd controller
            git fetch https://git.opendaylight.org/gerrit/controller refs/changes/76/50176/1 && git checkout FETCH_HEAD
            cd ..
            cd didm
            git fetch https://git.opendaylight.org/gerrit/didm refs/changes/87/50187/1 && git checkout FETCH_HEAD
            cd ..
            cd faas
            git fetch https://git.opendaylight.org/gerrit/faas refs/changes/90/50190/1 && git checkout FETCH_HEAD
            cd ..
            cd genius
            git fetch https://git.opendaylight.org/gerrit/genius refs/changes/92/50192/1 && git checkout FETCH_HEAD
            cd ..
            cd groupbasedpolicy
            git fetch https://git.opendaylight.org/gerrit/groupbasedpolicy refs/changes/00/50200/1 && git checkout FETCH_HEAD
            cd ..
            cd netvirt
            git fetch https://git.opendaylight.org/gerrit/netvirt refs/changes/15/50215/1 && git checkout FETCH_HEAD
            cd ..
            cd odlparent
            git fetch https://git.opendaylight.org/gerrit/odlparent refs/changes/20/49820/2 && git checkout FETCH_HEAD
            cd ..
            cd openflowplugin
            git fetch https://git.opendaylight.org/gerrit/openflowplugin refs/changes/83/50183/2 && git checkout FETCH_HEAD
            cd ..
            cd ovsdb
            git fetch https://git.opendaylight.org/gerrit/ovsdb refs/changes/91/50191/1 && git checkout FETCH_HEAD
            cd ..
            cd yangtools
            git fetch https://git.opendaylight.org/gerrit/yangtools refs/changes/73/50173/2 && git checkout FETCH_HEAD
            cd ..
        # force jenkins install of maven version before any shell scripts use it
        - maven-target:
            maven-version: 'mvn33'
            goals: '-version'
            settings: 'autorelease-settings'
            settings-type: cfp
            global-settings: 'odl-global-settings'
            global-settings-type: cfp
        - wipe-local-maven-repo
        - jacoco-nojava-workaround
        - shell: "./scripts/list-project-dependencies.sh"
        - autorelease-determine-merge-order
        - autorelease-cfp:
            autorelease-settings: 'autorelease-settings'
            odl-global-settings: 'odl-global-settings'
        - autorelease-generate-taglist
        - autorelease-distribute-taglist
        - autorelease-generate-release-patches
        # In a perfect world projects should be releasing separately and we consume them
        # via a project that pulls the release bits from each project from Nexus.
        # Keep the patches compatible with that ideal, but apply an edit
        # to enable building in a single maven reactor afterwards.
        - autorelease-fix-relative-paths
        - maven-target:
              maven-version: 'mvn33'
              pom: 'pom.xml'
              goals: 'clean deploy -V -B -Pintegrationtests,docs,repoBuild -Djenkins -Dcheckstyle.skip=true -Dmaven.repo.local=/tmp/r -Dorg.ops4j.pax.url.mvn.localRepository=/tmp/r -DaltDeploymentRepository=staging::default::file:hide/from/pom/files/stage'
              java-opts:
                - '-Xmx10g -XX:MaxPermSize=1024m -Dmaven.compile.fork=true'
              settings: 'autorelease-settings'
              settings-type: cfp
              global-settings: 'odl-global-settings'
              global-settings-type: cfp
        - autorelease-maven-deploy
        - autorelease-get-integration-test-variables
        - autorelease-maven-sources:
            maven-version: 'mvn33'
            settings: 'autorelease-settings'
            global-settings: 'odl-global-settings'
        - autorelease-maven-sources-post-process
        - autorelease-sys-stats
        - shell: |
            mkdir -p archives/
            cp *.log *.prop $_

    publishers:
        - email-notification:
            email-recipients: '{email-recipients}'
            email-prefix: '[autorelease]'
        - trigger-parameterized-builds:
            - project: 'integration-distribution-test-{integration-test}'
              condition: UNSTABLE_OR_BETTER
              property-file: variables.jenkins-trigger
              fail-on-missing: true
        - opendaylight-infra-shiplogs:
            maven-version: 'mvn33'
