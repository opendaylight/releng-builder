- job-template:
    name: '{name}-release-java'

    # Job template for producing a release candidate by creating a staging repo
    # in Nexus.

    project-type: maven
    node: dynamic_merge
    jdk: '{jdk}'

    logrotate:
        daysToKeep: '30'

    parameters:
        - project-parameter:
            project: '{project}'
        - build-tag
        - stage-id-parameter:
            stage-id: '{stage-id}'

    scm:
        - git:
            credentials-id: '{ssh-credentials}'
            url: '$GIT_BASE'
            branches:
                - '$BUILD_TAG'
            skip-tag: true
            shallow-clone: true
            wipe-workspace: true

    wrappers:
        - build-timeout
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    prebuilders:
        - wipe-org-opendaylight-repo
        - jacoco-nojava-workaround
        - provide-maven-settings:
            global-settings-file: '{odl-global-settings}'
            settings-file: '{autorelease-settings}'

    maven:
        maven-name: '{mvn33}'
        root-pom: 'pom.xml'
        goals: 'clean deploy -V -Dmaven.repo.local=/tmp/r -Dorg.ops4j.pax.url.mvn.localRepository=/tmp/r  -Djenkins -DaltDeploymentRepository=staging::default::file:hide/from/pom/files/stage'
        maven-opts: '-Xmx1024m -XX:MaxPermSize=256m'
        settings: '{autorelease-settings}'
        global-settings: '{odl-global-settings}'
        post-step-run-condition: UNSTABLE

    postbuilders:
        - releng-stage-release

    publishers:
        - archive-artifacts:
            artifacts: '*.log'
        - email-notification:
            email-prefix: '[releng]'

- job-template:
    name: '{name}-verify-python-{stream}'

    # Job template for python verify jobs
    #
    # The purpose of this job template is to run tox for projects using this
    # template.
    #
    # Required Variables:
    #     stream:    release stream (eg. stable-lithium or beryllium)
    #     branch:    git branch (eg. stable/lithium or master)
    #     toxdir:    directory containing the project's tox.ini relative to
    #                the workspace.

    project-type: freestyle
    node: dynamic_verify
    concurrent: true

    logrotate:
        daysToKeep: '7'
        numToKeep: '-1'
        artifactDaysToKeep: '-1'
        artifactNumToKeep: '-1'

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: '{branch}'
        - gerrit-refspec-parameter:
            refspec: 'refs/heads/{branch}'

    scm:
        - git:
            credentials-id: '{ssh-credentials}'
            url: '$GIT_BASE'
            basedir: 'repo'
            refspec: '$GERRIT_REFSPEC'
            branches:
                - 'origin/$GERRIT_BRANCH'
            skip-tag: true
            choosing-strategy: 'gerrit'

    wrappers:
        - build-timeout
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - gerrit:
            server-name: 'OpenDaylight'
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'true'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'true'
                - draft-published-event
                - comment-added-contains-event:
                    comment-contains-value: 'recheck'
                - comment-added-contains-event:
                    comment-contains-value: 'reverify'
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{project}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'
                file-paths:
                    - compare-type: ANT
                      pattern: '{toxdir}/**'

    builders:
        - shell: |
            virtualenv $WORKSPACE/venv-tox
            source $WORKSPACE/venv-tox/bin/activate
            pip install --upgrade pip
            pip install --upgrade tox argparse
            pip freeze
            cd $WORKSPACE/repo/{toxdir}
            tox

    publishers:
        - email-notification:
            email-prefix: '[{project}]'

- job-template:
    name: '{name}-merge-rtd-{stream}'
    # Template for ReadTheDocs triggering

    project-type: freestyle
    node: dynamic_verify
    concurrent: false

    parameters:
        - project-parameter:
            project: '{project}'
        - gerrit-parameter:
            branch: '{branch}'
        - gerrit-refspec-parameter:
            refspec: 'refs/heads/{branch}'

    wrappers:
        - build-timeout
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - gerrit-trigger-patch-merged:
            name: '{project}'
            branch: '{branch}'

    builders:
        - shell: |
            curl -X POST https://readthedocs.org/build/{rtdproject}

    publishers:
        - email-notification:
            email-prefix: '[{project}]'
