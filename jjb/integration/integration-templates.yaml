---
# Job templates in this file (please update with every new template):
# FIXME: Update
#
# {project}-csit-1node-{functionality}-{install}-{stream}
# {project}-csit-3node-docker-{functionality}-{install}-{stream}
# {project}-csit-3node-{functionality}-{install}-{stream}
# {project}-csit-verify-1node-{functionality}
# {project}-csit-verify-3node-{functionality}
# {project}-patch-test-{feature}-{stream}
#
# Parameters:
# FIXME: Distinguish variables, macros and arguments, then update.
#
# opendaylight-infra-parameters: main project integration/test ($PROJECT)
# jre: (openjdk7 or openjdk8) Java runtime environment to use when launching ODL
# integration-distribution-branch: distribution branch ($DISTROBRANCH)
# integration-controller-bundle-url: distribution URL ($BUNDLE_URL)
# integration-controller-scope: only or all features ($CONTROLLERSCOPE)
# integration-controller-features: features under test ($CONTROLLER FEATURES)
# integration-test-options: robot options ($TESTOPTIONS)
# integration-stream-test-plan: stream specific robot test plan ($STREAMTESTPLAN)
# integration-test-plan: fallback robot test plan ($TESTPLAN)
# integration-patch-refspec: test branch ($PATCHREFSPEC)
# integration-use-features-boot: bool to toggle use of featuresBoot ($USEFEATURESBOOT)

###########
# Anchors #
###########

- _inttest_csit_common: &inttest_csit_common
    name: inttest-csit-common
    # Defines common configuration to all CSIT jobs

    #####################
    # Default variables #
    #####################

    build-node: centos8-robot-2c-8g
    build-days-to-keep: 30
    build-timeout: 360 # Time in minutes
    disable-job: false

    #####################
    # Job configuration #
    #####################

    project-type: freestyle
    node: "{build-node}"
    concurrent: true
    disabled: "{disable-job}"

    properties:
      - opendaylight-infra-properties:
          build-days-to-keep: "{build-days-to-keep}"

    wrappers:
      - opendaylight-infra-wrappers:
          build-timeout: "{build-timeout}"

#################
# Job Templates #
#################

- job-template:
    name: "{prefix}{project}-csit-verify-1node-{functionality}"
    id: inttest-csit-verify-1node
    <<: *inttest_csit_common

    #####################
    # Default variables #
    #####################

    openstack-cloud: vex
    openstack-heat-template: csit-2-instance-type.yaml
    openstack-heat-template-dir: openstack-hot

    #####################
    # Job configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: "{archive-artifacts}"
          branch: "{branch}"
          os-cloud: "{os-cloud}"
          # CSIT
          bundle-url: "{bundle-url}"
          repo-url: "{repo-url}"
          robot-options: "{robot-options}"
          # Controller
          controller-scope: only
          controller-max-mem: "{controller-max-mem}"
          debug-map: "{debug-map}"
          install-features: "{install-features}"
          use-features-boot: "True"
          elasticsearch-attribute: "{elasticsearch-attribute}"
          karaf-based-controller: "{karaf-based-controller}"
          karaf-version: "{karaf-version}"
      - integration-stack-2-type:
          vm_0_count: "1"
          vm_0_flavor: "{odl_system_flavor}"
          vm_0_image: "{odl_system_image}"
          vm_1_count: "{tools_system_count}"
          vm_1_flavor: "{tools_system_flavor}"
          vm_1_image: "{tools_system_image}"
      - integration-distribution-branch:
          branch: "{verify-branch}"
      - integration-distribution-stream:
          stream: "{verify-stream}"
      - integration-script-plan:
          script-plan: "{project}.txt"
      - integration-config-plan:
          config-plan: "{project}.txt"
      - integration-stream-test-plan:
          stream-test-plan: "{project}-{functionality}-{verify-stream}.txt"
      - integration-test-plan:
          test-plan: "{project}-{functionality}.txt"
      - integration-jdk-version:
          jdkversion: "{verify-jdkversion}"

    scm:
      - integration-gerrit-scm:
          basedir: "test"
          refspec: "$GERRIT_REFSPEC"
          branch: "master"

    triggers:
      - integration-trigger-patch-submitted:
          gerrit-server-name: "{gerrit-server-name}"
          project: "integration/test"
          branch: "master"
          files: "csit/suites/{project}/**"

    builders:
      - lf-infra-pre-build
      - integration-stack-2-type:
          openstack-cloud: "{openstack-cloud}"
          openstack-heat-template: "{openstack-heat-template}"
          openstack-heat-template-dir: "{openstack-heat-template-dir}"
      - integration-install-robotframework
      - inject:
          properties-file: "env.properties"
      - integration-get-slave-addresses
      - inject:
          properties-file: "slave_addresses.txt"
      - integration-detect-variables
      - integration-install-common-functions
      - integration-deploy-controller-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: "{email-recipients}"
          email-prefix: "[{project}]"
      - integration-csit-publish:
          robot_other_files: ""
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-stack-delete:
          openstack-cloud: "{openstack-cloud}"
      - lf-infra-publish

######################
# inttest-csit-1node #
######################

- _inttest_csit_1node: &inttest_csit_1node
    name: inttest-csit-1node

    #####################
    # Default variables #
    #####################

    openstack-cloud: vex
    openstack-heat-template: csit-2-instance-type.yaml
    openstack-heat-template-dir: openstack-hot

    #####################
    # Job configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: "{archive-artifacts}"
          branch: "{branch}"
          os-cloud: "{os-cloud}"
          # CSIT
          bundle-url: "{bundle-url}"
          repo-url: "{repo-url}"
          robot-options: "{robot-options}"
          # Controller
          controller-scope: "{install}"
          controller-max-mem: "{controller-max-mem}"
          debug-map: "{debug-map}"
          install-features: "{install-features}"
          use-features-boot: "True"
          elasticsearch-attribute: "{elasticsearch-attribute}"
          karaf-based-controller: "{karaf-based-controller}"
          karaf-version: "{karaf-version}"
      - integration-stack-2-type:
          vm_0_count: "1"
          vm_0_flavor: "{odl_system_flavor}"
          vm_0_image: "{odl_system_image}"
          vm_1_count: "{tools_system_count}"
          vm_1_flavor: "{tools_system_flavor}"
          vm_1_image: "{tools_system_image}"
      - integration-distribution-branch:
          branch: "{branch}"
      - integration-distribution-stream:
          stream: "{stream}"
      - integration-script-plan:
          script-plan: "{project}.txt"
      - integration-config-plan:
          config-plan: "{project}.txt"
      - integration-stream-test-plan:
          stream-test-plan: "{project}-{functionality}-{stream}.txt"
      - integration-test-plan:
          test-plan: "{project}-{functionality}.txt"
      - integration-test-suites:
          test-suites: "{test-suites}"
      - integration-patch-refspec:
          branch: "master"
      - integration-jdk-version:
          jdkversion: "{jre}"

    scm:
      - integration-gerrit-scm:
          basedir: "test"
          refspec: "$PATCHREFSPEC"
          branch: "master"

    triggers:
      # we need this for not SR projects
      - integration-csit-trigger:
          jobs: "{trigger-jobs}"

    builders:
      - lf-infra-pre-build
      - integration-stack-2-type:
          openstack-cloud: "{openstack-cloud}"
          openstack-heat-template: "{openstack-heat-template}"
          openstack-heat-template-dir: "{openstack-heat-template-dir}"
      - integration-install-robotframework
      - inject:
          properties-file: "env.properties"
      - integration-get-slave-addresses
      - inject:
          properties-file: "slave_addresses.txt"
      - integration-detect-variables
      - integration-install-common-functions
      - integration-deploy-controller-run-test
      - integration-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: "{email-recipients}"
          email-prefix: "[{project}]"
      - plot:
          - title: "{01-plot-title}"
            yaxis: "{01-plot-yaxis}"
            group: "{01-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-1node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv"
            series:
              - file: "{01-plot-data-file}"
                inclusion-flag: "off"
                display-table: true
                format: csv
          - title: "{02-plot-title}"
            yaxis: "{02-plot-yaxis}"
            group: "{02-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-1node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv"
            series:
              - file: "{02-plot-data-file}"
                inclusion-flag: "off"
                display-table: true
                format: csv
          - title: "{03-plot-title}"
            yaxis: "{03-plot-yaxis}"
            group: "{03-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-1node-{functionality}-{install}-{stream}-{03-plot-data-file}-03-history.csv"
            series:
              - file: "{03-plot-data-file}"
                inclusion-flag: "{03-inclusion-flag}"
                exclude: "{03-exclude-value}"
                format: csv
          - title: "{04-plot-title}"
            yaxis: "{04-plot-yaxis}"
            group: "{04-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-1node-{functionality}-{install}-{stream}-{04-plot-data-file}-04-history.csv"
            series:
              - file: "{04-plot-data-file}"
                inclusion-flag: "{04-inclusion-flag}"
                exclude: "{04-exclude-value}"
                format: csv
          - title: "{05-plot-title}"
            yaxis: "{05-plot-yaxis}"
            group: "{05-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-1node-{functionality}-{install}-{stream}-{05-plot-data-file}-05-history.csv"
            series:
              - file: "{05-plot-data-file}"
                inclusion-flag: "{05-inclusion-flag}"
                exclude: "{05-exclude-value}"
                format: csv
          - title: "{06-plot-title}"
            yaxis: "{06-plot-yaxis}"
            group: "{06-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-1node-{functionality}-{install}-{stream}-{06-plot-data-file}-06-history.csv"
            series:
              - file: "{06-plot-data-file}"
                inclusion-flag: "{06-inclusion-flag}"
                exclude: "{06-exclude-value}"
                format: csv
          - title: "{07-plot-title}"
            yaxis: "{07-plot-yaxis}"
            group: "{07-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-1node-{functionality}-{install}-{stream}-{07-plot-data-file}-07-history.csv"
            series:
              - file: "{07-plot-data-file}"
                inclusion-flag: "{07-inclusion-flag}"
                exclude: "{07-exclude-value}"
                format: csv
          - title: "{08-plot-title}"
            yaxis: "{08-plot-yaxis}"
            group: "{08-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-1node-{functionality}-{install}-{stream}-{08-plot-data-file}-08-history.csv"
            series:
              - file: "{08-plot-data-file}"
                inclusion-flag: "{08-inclusion-flag}"
                exclude: "{08-exclude-value}"
                format: csv
          - title: "{09-plot-title}"
            yaxis: "{09-plot-yaxis}"
            group: "{09-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-1node-{functionality}-{install}-{stream}-{09-plot-data-file}-09-history.csv"
            series:
              - file: "{09-plot-data-file}"
                inclusion-flag: "{09-inclusion-flag}"
                exclude: "{09-exclude-value}"
                format: csv
          - title: "{10-plot-title}"
            yaxis: "{10-plot-yaxis}"
            group: "{10-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-1node-{functionality}-{install}-{stream}-{10-plot-data-file}-10-history.csv"
            series:
              - file: "{10-plot-data-file}"
                inclusion-flag: "{10-inclusion-flag}"
                exclude: "{10-exclude-value}"
                format: csv
      - integration-csit-publish:
          robot_other_files: ""
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-stack-delete:
          openstack-cloud: "{openstack-cloud}"
      - lf-infra-publish

- job-template:
    name: "{prefix}{project}-csit-1node-{functionality}-{install}-{stream}"
    id: inttest-csit-1node
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_1node

- job-template:
    name: "{prefix}{project}-csit-verify-3node-{functionality}"
    id: inttest-csit-verify-3node
    <<: *inttest_csit_common

    #####################
    # Default variables #
    #####################

    openstack-cloud: vex
    openstack-heat-template: csit-2-instance-type.yaml
    openstack-heat-template-dir: openstack-hot

    #####################
    # Job Configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: "{archive-artifacts}"
          branch: "{branch}"
          os-cloud: "{os-cloud}"
          # CSIT
          bundle-url: "{bundle-url}"
          repo-url: "{repo-url}"
          robot-options: "{robot-options}"
          # Controller
          controller-scope: only
          controller-max-mem: "{controller-max-mem}"
          debug-map: "{debug-map}"
          install-features: "odl-jolokia,{install-features}"
          use-features-boot: "True"
          elasticsearch-attribute: "{elasticsearch-attribute}"
          karaf-based-controller: "{karaf-based-controller}"
          karaf-version: "{karaf-version}"
      - integration-stack-2-type:
          vm_0_count: "3"
          vm_0_flavor: "{odl_system_flavor}"
          vm_0_image: "{odl_system_image}"
          vm_1_count: "{tools_system_count}"
          vm_1_flavor: "{tools_system_flavor}"
          vm_1_image: "{tools_system_image}"
      - integration-distribution-branch:
          branch: "{verify-branch}"
      - integration-distribution-stream:
          stream: "{verify-stream}"
      - integration-script-plan:
          script-plan: "{project}.txt"
      - integration-config-plan:
          config-plan: "{project}.txt"
      - integration-stream-test-plan:
          stream-test-plan: "{project}-{functionality}-{verify-stream}.txt"
      - integration-test-plan:
          test-plan: "{project}-{functionality}.txt"
      - integration-test-suites:
          test-suites: "{test-suites}"
      - integration-jdk-version:
          jdkversion: "{verify-jdkversion}"

    scm:
      - integration-gerrit-scm:
          basedir: "test"
          refspec: "$GERRIT_REFSPEC"
          branch: "master"

    triggers:
      - integration-trigger-patch-submitted:
          gerrit-server-name: "{gerrit-server-name}"
          project: "integration/test"
          branch: "master"
          files: "csit/suites/{project}/**"

    builders:
      - lf-infra-pre-build
      - integration-stack-2-type:
          openstack-cloud: "{openstack-cloud}"
          openstack-heat-template: "{openstack-heat-template}"
          openstack-heat-template-dir: "{openstack-heat-template-dir}"
      - integration-install-robotframework
      - inject:
          properties-file: "env.properties"
      - integration-get-slave-addresses
      - inject:
          properties-file: "slave_addresses.txt"
      - integration-detect-variables
      - integration-install-common-functions
      - integration-configure-clustering
      - integration-start-cluster-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: "{email-recipients}"
          email-prefix: "[{project}]"
      - integration-csit-publish:
          robot_other_files: ""
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-stack-delete:
          openstack-cloud: "{openstack-cloud}"
      - lf-infra-publish

######################
# inttest-csit-3node #
######################

- _inttest_csit_3node: &inttest_csit_3node
    name: inttest-csit-3node

    #####################
    # Default variables #
    #####################

    openstack-cloud: vex
    openstack-heat-template: csit-2-instance-type.yaml
    openstack-heat-template-dir: openstack-hot

    #####################
    # Job configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: "{archive-artifacts}"
          branch: "{branch}"
          os-cloud: "{os-cloud}"
          # CSIT
          bundle-url: "{bundle-url}"
          repo-url: "{repo-url}"
          robot-options: "{robot-options}"
          # Controller
          controller-scope: "{install}"
          controller-max-mem: "{controller-max-mem}"
          debug-map: "{debug-map}"
          install-features: "odl-jolokia,{install-features}"
          use-features-boot: "True"
          elasticsearch-attribute: "{elasticsearch-attribute}"
          karaf-based-controller: "{karaf-based-controller}"
          karaf-version: "{karaf-version}"
      - integration-stack-2-type:
          vm_0_count: "3"
          vm_0_flavor: "{odl_system_flavor}"
          vm_0_image: "{odl_system_image}"
          vm_1_count: "{tools_system_count}"
          vm_1_flavor: "{tools_system_flavor}"
          vm_1_image: "{tools_system_image}"
      - integration-distribution-branch:
          branch: "{branch}"
      - integration-distribution-stream:
          stream: "{stream}"
      - integration-script-plan:
          script-plan: "{project}.txt"
      - integration-config-plan:
          config-plan: "{project}.txt"
      - integration-stream-test-plan:
          stream-test-plan: "{project}-{functionality}-{stream}.txt"
      - integration-test-plan:
          test-plan: "{project}-{functionality}.txt"
      - integration-test-suites:
          test-suites: "{test-suites}"
      - integration-patch-refspec:
          branch: "master"
      - integration-jdk-version:
          jdkversion: "{jre}"

    scm:
      - integration-gerrit-scm:
          basedir: "test"
          refspec: "$PATCHREFSPEC"
          branch: "master"

    triggers:
      # we need this for not SR projects
      - integration-csit-trigger:
          jobs: "{trigger-jobs}"

    builders:
      - lf-infra-pre-build
      - integration-stack-2-type:
          openstack-cloud: "{openstack-cloud}"
          openstack-heat-template: "{openstack-heat-template}"
          openstack-heat-template-dir: "{openstack-heat-template-dir}"
      - integration-install-robotframework
      - inject:
          properties-file: "env.properties"
      - integration-get-slave-addresses
      - inject:
          properties-file: "slave_addresses.txt"
      - integration-detect-variables
      - integration-install-common-functions
      - integration-configure-clustering
      - integration-start-cluster-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: "{email-recipients}"
          email-prefix: "[{project}]"
      - plot:
          - title: "{01-plot-title}"
            yaxis: "{01-plot-yaxis}"
            group: "{01-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv"
            series:
              - file: "{01-plot-data-file}"
                inclusion-flag: "off"
                display-table: true
                format: csv
          - title: "{02-plot-title}"
            yaxis: "{02-plot-yaxis}"
            group: "{02-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv"
            series:
              - file: "{02-plot-data-file}"
                inclusion-flag: "off"
                display-table: true
                format: csv
          - title: "{03-plot-title}"
            yaxis: "{03-plot-yaxis}"
            group: "{03-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{03-plot-data-file}-03-history.csv"
            series:
              - file: "{03-plot-data-file}"
                inclusion-flag: "{03-inclusion-flag}"
                exclude: "{03-exclude-value}"
                format: csv
          - title: "{04-plot-title}"
            yaxis: "{04-plot-yaxis}"
            group: "{04-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{04-plot-data-file}-04-history.csv"
            series:
              - file: "{04-plot-data-file}"
                inclusion-flag: "{04-inclusion-flag}"
                exclude: "{04-exclude-value}"
                format: csv
          - title: "{05-plot-title}"
            yaxis: "{05-plot-yaxis}"
            group: "{05-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{05-plot-data-file}-05-history.csv"
            series:
              - file: "{05-plot-data-file}"
                inclusion-flag: "{05-inclusion-flag}"
                exclude: "{05-exclude-value}"
                format: csv
          - title: "{06-plot-title}"
            yaxis: "{06-plot-yaxis}"
            group: "{06-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{06-plot-data-file}-06-history.csv"
            series:
              - file: "{06-plot-data-file}"
                inclusion-flag: "{06-inclusion-flag}"
                exclude: "{06-exclude-value}"
                format: csv
          - title: "{07-plot-title}"
            yaxis: "{07-plot-yaxis}"
            group: "{07-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{07-plot-data-file}-07-history.csv"
            series:
              - file: "{07-plot-data-file}"
                inclusion-flag: "{07-inclusion-flag}"
                exclude: "{07-exclude-value}"
                format: csv
          - title: "{08-plot-title}"
            yaxis: "{08-plot-yaxis}"
            group: "{08-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{08-plot-data-file}-08-history.csv"
            series:
              - file: "{08-plot-data-file}"
                inclusion-flag: "{08-inclusion-flag}"
                exclude: "{08-exclude-value}"
                format: csv
          - title: "{09-plot-title}"
            yaxis: "{09-plot-yaxis}"
            group: "{09-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{09-plot-data-file}-09-history.csv"
            series:
              - file: "{09-plot-data-file}"
                inclusion-flag: "{09-inclusion-flag}"
                exclude: "{09-exclude-value}"
                format: csv
          - title: "{10-plot-title}"
            yaxis: "{10-plot-yaxis}"
            group: "{10-plot-group}"
            num-builds: "180"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{10-plot-data-file}-10-history.csv"
            series:
              - file: "{10-plot-data-file}"
                inclusion-flag: "{10-inclusion-flag}"
                exclude: "{10-exclude-value}"
                format: csv
      - integration-csit-publish:
          robot_other_files: ""
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-stack-delete:
          openstack-cloud: "{openstack-cloud}"
      - lf-infra-publish

- job-template:
    name: "{prefix}{project}-csit-3node-{functionality}-{install}-{stream}"
    id: inttest-csit-3node
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_3node

- job-template:
    name: "{prefix}{project}-csit-3node-{functionality}-{install}-{stream}"
    id: inttest-csit-3node-custom
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_3node

    parameters:
      - integration-csit-parameters:
          archive-artifacts: "{archive-artifacts}"
          branch: "{branch}"
          os-cloud: "{os-cloud}"
          # CSIT
          bundle-url: "{bundle-url}"
          repo-url: "{repo-url}"
          robot-options: "{robot-options}"
          # Controller
          controller-scope: "{install}"
          controller-max-mem: "{controller-max-mem}"
          debug-map: "{debug-map}"
          install-features: "odl-jolokia,{install-features}"
          use-features-boot: "True"
          elasticsearch-attribute: "{elasticsearch-attribute}"
          karaf-based-controller: "{karaf-based-controller}"
          karaf-version: "{karaf-version}"
      - integration-stack-2-type:
          vm_0_count: "3"
          vm_0_flavor: "{odl_system_flavor}"
          vm_0_image: "{odl_system_image}"
          vm_1_count: "{tools_system_count}"
          vm_1_flavor: "{tools_system_flavor}"
          vm_1_image: "{tools_system_image}"
      - integration-distribution-branch:
          branch: "{branch}"
      - integration-distribution-stream:
          stream: "{stream}"
      - integration-script-plan:
          script-plan: "{project}.txt"
      - integration-config-plan:
          config-plan: "{project}.txt"
      - integration-stream-test-plan:
          stream-test-plan: "{project}-{functionality}-{stream}.txt"
      - integration-test-plan:
          test-plan: "{testplan}"
      - integration-test-suites:
          test-suites: "{test-suites}"
      - integration-patch-refspec:
          branch: "master"
      - integration-jdk-version:
          jdkversion: "{jre}"

- job-template:
    name: "{prefix}{project}-csit-3node-docker-{functionality}-{install}-{stream}"
    id: inttest-csit-3node-docker
    <<: *inttest_csit_common

    #####################
    # Default variables #
    #####################

    openstack-cloud: vex
    openstack-heat-template: csit-2-instance-type.yaml
    openstack-heat-template-dir: openstack-hot

    docker_system_count: "1"
    docker_system_flavor: "v3-standard-2"
    docker_system_image: "ZZCI - CentOS 7 - docker - x86_64 - 20240601-220142.195"

    #####################
    # Job Configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: "{archive-artifacts}"
          branch: "{branch}"
          os-cloud: "{os-cloud}"
          # CSIT
          bundle-url: "{bundle-url}"
          repo-url: "{repo-url}"
          robot-options: "{robot-options}"
          # Controller
          controller-scope: "{install}"
          controller-max-mem: "{controller-max-mem}"
          debug-map: "{debug-map}"
          install-features: "odl-jolokia,{install-features}"
          use-features-boot: "True"
          elasticsearch-attribute: "{elasticsearch-attribute}"
          karaf-based-controller: "{karaf-based-controller}"
          karaf-version: "{karaf-version}"
      - integration-stack-2-type:
          vm_0_count: "3"
          vm_0_flavor: "{odl_system_flavor}"
          vm_0_image: "{odl_system_image}"
          vm_1_count: "{docker_system_count}"
          vm_1_flavor: "{docker_system_flavor}"
          vm_1_image: "{docker_system_image}"
      - integration-distribution-branch:
          branch: "{branch}"
      - integration-distribution-stream:
          stream: "{stream}"
      - integration-script-plan:
          script-plan: "{project}.txt"
      - integration-config-plan:
          config-plan: "{project}.txt"
      - integration-stream-test-plan:
          stream-test-plan: "{project}-{functionality}-{stream}.txt"
      - integration-test-plan:
          test-plan: "{project}-{functionality}.txt"
      - integration-patch-refspec:
          branch: "master"
      - integration-jdk-version:
          jdkversion: "{jre}"

    scm:
      - integration-gerrit-scm:
          basedir: "test"
          refspec: "$PATCHREFSPEC"
          branch: "master"

    builders:
      - lf-infra-pre-build
      - integration-stack-2-type:
          openstack-cloud: "{openstack-cloud}"
          openstack-heat-template: "{openstack-heat-template}"
          openstack-heat-template-dir: "{openstack-heat-template-dir}"
      - integration-install-robotframework
      - inject:
          properties-file: "env.properties"
      - integration-get-slave-addresses
      - inject:
          properties-file: "slave_addresses.txt"
      - integration-detect-variables
      - integration-install-common-functions
      - integration-configure-clustering
      - integration-start-cluster-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: "{email-recipients}"
          email-prefix: "[{project}]"
      - plot:
          - title: "{01-plot-title}"
            yaxis: "{01-plot-yaxis}"
            group: "{01-plot-group}"
            num-builds: "5400"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv"
            series:
              - file: "{01-plot-data-file}"
                inclusion-flag: "off"
                display-table: true
                format: csv
          - title: "{02-plot-title}"
            yaxis: "{02-plot-yaxis}"
            group: "{02-plot-group}"
            num-builds: "5400"
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: "{project}-csit-3node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv"
            series:
              - file: "{02-plot-data-file}"
                inclusion-flag: "off"
                display-table: true
                format: csv
      - integration-csit-publish:
          robot_other_files: ""
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-stack-delete:
          openstack-cloud: "{openstack-cloud}"
      - lf-infra-publish

# Template: {project}-mri-patch-test-{stream}
# Goal: Build a patch and run project specific system test on a mri projects distribution containing the change
# Operation: This job template builds a patch, uses the projects distribution and triggers the project system
# test defined in {csit-list} when gerrit receives test-{project} keyword

- job-template:
    name: "{prefix}{project}-mri-patch-test-{feature}-{stream}"
    id: inttest-mri-patch-test
    <<: *inttest_csit_common

    build-timeout: 720

    parameters:
      - opendaylight-infra-parameters:
          os-cloud: "{os-cloud}"
          project: "{project}"
          branch: "{branch}"
          refspec: "refs/heads/{branch}"
          artifacts: "{archive-artifacts}"
      - integration-distribution-branch:
          branch: "{branch}"
      - distribution-karaf-version:
          karaf-version: "{karaf-version}"
      - integration-distribution-git-url:
          git-url: "{git-url}"
      - string:
          name: feature
          default: "all"
          description: "Specific feature test for patch"
      - maven-exec:
          maven-version: "{mvn-version}"

    scm:
      - integration-gerrit-scm:
          basedir: "{project}"
          refspec: "$GERRIT_REFSPEC"
          branch: "{branch}"
      - integration-distribution-scm:
          branch: "{branch}"

    triggers:
      - gerrit:
          server-name: "{gerrit-server-name}"
          trigger-on:
            - comment-added-contains-event:
                comment-contains-value: "test-{project}-all"
            - comment-added-contains-event:
                comment-contains-value: "test-{project}-{feature}"
          projects:
            - project-compare-type: "ANT"
              project-pattern: "{project}"
              branches:
                - branch-compare-type: "ANT"
                  branch-pattern: "**/{branch}"
          skip-vote:
            successful: true
            failed: true
            unstable: true
            notbuilt: true

    builders:
      - integration-rebase-gerrit-patch
      - wipe-org-opendaylight-repo
      - lf-update-java-alternatives:
          java-version: "{java-version}"
      - maven-target:
          maven-version: "{mvn-version}"
          pom: "{project}/pom.xml"
          goals: |
            clean install dependency:tree
            -Pq
            -Dgitid.skip=false
            -Dmaven.gitcommitid.skip=false
            -DgenerateReports=false
            -Dstream={stream}
            {opendaylight-infra-mvn-opts}
          # {opendaylight-infra-parallel-mvn-opts} is bad when there are multiple big features in SFT.
          java-opts:
            - "-Xmx4096m -Dmaven.compile.fork=true"
          settings: integration-settings
          settings-type: cfp
          global-settings: global-settings
          global-settings-type: cfp
      - integration-upload-distribution:
          dist-pom: "{project}/pom.xml"
          settings-project: "{project}"
      - trigger-builds:
          - project: "{csit-list}"
            block: true
            predefined-parameters: |
              BUNDLE_URL=$BUNDLE_URL
              GERRIT_BRANCH=$GERRIT_BRANCH
              GERRIT_PROJECT=$GERRIT_PROJECT
              GERRIT_REFSPEC=$GERRIT_REFSPEC
              KARAF_VERSION=$KARAF_VERSION

    publishers:
      - email-notification:
          email-recipients: "{email-recipients}"
          email-prefix: "[{project}]"
      - lf-infra-publish

# Template: {project}-patch-test-{stream}
# Goal: Build a patch and run project specific system test on a distribution containing the change
# Operation: This job template builds a patch, creates a distribution containing the patch, and
# triggers the project system test defined in {csit-list} when gerrit receives test-{project} keyword

- job-template:
    name: "{prefix}{project}-patch-test-{feature}-{stream}"
    id: inttest-patch-test
    <<: *inttest_csit_common

    build-timeout: 720

    parameters:
      - opendaylight-infra-parameters:
          os-cloud: "{os-cloud}"
          project: "{project}"
          branch: "{branch}"
          refspec: "refs/heads/{branch}"
          artifacts: "{archive-artifacts}"
      - integration-distribution-branch:
          branch: "{branch}"
      - distribution-karaf-version:
          karaf-version: "{karaf-version}"
      - integration-distribution-git-url:
          git-url: "{git-url}"
      - string:
          name: feature
          default: "all"
          description: "Specific feature test for patch"
      - maven-exec:
          maven-version: "{mvn-version}"

    scm:
      - integration-gerrit-scm:
          basedir: "{project}"
          refspec: "$GERRIT_REFSPEC"
          branch: "{branch}"
      - integration-distribution-scm:
          branch: "{branch}"

    triggers:
      - gerrit:
          server-name: "{gerrit-server-name}"
          trigger-on:
            - comment-added-contains-event:
                comment-contains-value: "test-{project}-all"
            - comment-added-contains-event:
                comment-contains-value: "test-{project}-{feature}"
          projects:
            - project-compare-type: "ANT"
              project-pattern: "{project}"
              branches:
                - branch-compare-type: "ANT"
                  branch-pattern: "**/{branch}"
          skip-vote:
            successful: true
            failed: true
            unstable: true
            notbuilt: true

    builders:
      - integration-rebase-gerrit-patch
      - wipe-org-opendaylight-repo
      - lf-update-java-alternatives:
          java-version: "{java-version}"
      - maven-target:
          maven-version: "{mvn-version}"
          pom: "{project}/pom.xml"
          goals: |
            clean install dependency:tree
            -Pq
            -Dgitid.skip=false
            -Dmaven.gitcommitid.skip=false
            -DgenerateReports=false
            -Dstream={stream}
            {opendaylight-infra-mvn-opts}
          # {opendaylight-infra-parallel-mvn-opts} is bad when there are multiple big features in SFT.
          java-opts:
            - "-Xmx4096m -Dmaven.compile.fork=true"
          settings: integration-settings
          settings-type: cfp
          global-settings: global-settings
          global-settings-type: cfp
      - maven-target:
          maven-version: "{mvn-version}"
          pom: distribution/pom.xml
          goals: |
            clean install dependency:tree
            -Pq
            -Dgitid.skip=false
            -Dmaven.gitcommitid.skip=false
            {opendaylight-infra-mvn-opts}
          # {opendaylight-infra-parallel-mvn-opts} is bad when there are multiple big features in SFT.
          java-opts:
            - "-Xmx1024m -Dmaven.compile.fork=true"
          settings: integration-settings
          settings-type: cfp
          global-settings: global-settings
          global-settings-type: cfp
      - integration-upload-distribution:
          dist-pom: distribution/pom.xml
          settings-project: integration
      - trigger-builds:
          - project: "{csit-list}"
            block: true
            predefined-parameters: |
              BUNDLE_URL=$BUNDLE_URL
              GERRIT_BRANCH=$GERRIT_BRANCH
              GERRIT_PROJECT=$GERRIT_PROJECT
              GERRIT_REFSPEC=$GERRIT_REFSPEC
              KARAF_VERSION=$KARAF_VERSION

    publishers:
      - email-notification:
          email-recipients: "{email-recipients}"
          email-prefix: "[{project}]"
      - lf-infra-publish
