---
# Job templates in this file (please update with every new template):
# FIXME: Update
#
# {project}-csit-1node-{functionality}-{install}-{stream}
# {project}-csit-3node-docker-{functionality}-{install}-{stream}
# {project}-csit-3node-{functionality}-{install}-{stream}
# {project}-csit-hwvtep-{topology}-openstack-{openstack}-{functionality}-{stream}
# {project}-csit-{topology}-openstack-{openstack}-{functionality}-{stream}
# {project}-csit-verify-1node-{functionality}
# {project}-csit-verify-3node-{functionality}
# {project}-patch-test-{feature}-{stream}
#
# Parameters:
# FIXME: Distinguish variables, macros and arguments, then update.
#
# opendaylight-infra-parameters: main project integration/test ($PROJECT)
# jre: (openjdk7 or openjdk8) Java runtime environment to use when launching ODL
# integration-distribution-branch: distribution branch ($DISTROBRANCH)
# integration-controller-bundle-url: distribution URL ($BUNDLE_URL)
# integration-controller-scope: only or all features ($CONTROLLERSCOPE)
# integration-controller-features: features under test ($CONTROLLER FEATURES)
# integration-test-options: robot options ($TESTOPTIONS)
# integration-stream-test-plan: stream specific robot test plan ($STREAMTESTPLAN)
# integration-test-plan: fallback robot test plan ($TESTPLAN)
# integration-patch-refspec: test branch ($PATCHREFSPEC)
# integration-use-features-boot: bool to toggle use of featuresBoot ($USEFEATURESBOOT)


###########
# Anchors #
###########

- inttest_csit_common: &inttest_csit_common
    name: inttest-csit-common
    # Defines common configuration to all CSIT jobs

    #####################
    # Default variables #
    #####################

    build-days-to-keep: 30
    build-timeout: 360  # Time in minutes
    disable-job: false

    #####################
    # Job configuration #
    #####################

    project-type: freestyle
    node: centos7-robot-2c-8g
    concurrent: true
    disabled: '{disable-job}'

    properties:
      - opendaylight-infra-properties:
          build-days-to-keep: '{build-days-to-keep}'

    wrappers:
      - opendaylight-infra-wrappers:
          build-timeout: '{build-timeout}'

#################
# Job Templates #
#################

- job-template:
    name: '{prefix}{project}-csit-verify-1node-{functionality}'
    id: inttest-csit-verify-1node
    <<: *inttest_csit_common

    #####################
    # Default variables #
    #####################

    openstack-cloud: vex
    openstack-heat-template: csit-2-instance-type.yaml
    openstack-heat-template-dir: openstack-hot

    odl_system_flavor: 'odl-highcpu-4'
    odl_system_image: 'ZZCI - CentOS 7 - builder - x86_64 - 20181010-215635.956'
    tools_system_count: 1
    tools_system_flavor: 'odl-highcpu-2'
    tools_system_image: 'ZZCI - Ubuntu 16.04 - mininet-ovs-25 - 20181029-223449.514'

    #####################
    # Job configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: only
          debug-map: '{debug-map}'
          install-features: '{install-features}'
          use-features-boot: 'True'
      - integration-stack-2-type:
          vm_0_count: 1
          vm_0_flavor: '{odl_system_flavor}'
          vm_0_image: '{odl_system_image}'
          vm_1_count: '{tools_system_count}'
          vm_1_flavor: '{tools_system_flavor}'
          vm_1_image: '{tools_system_image}'
      - integration-distribution-branch:
          branch: '{verify-branch}'
      - integration-distribution-stream:
          stream: '{verify-stream}'
      - integration-script-plan:
          script-plan: '{project}.txt'
      - integration-config-plan:
          config-plan: '{project}.txt'
      - integration-stream-test-plan:
          stream-test-plan: '{project}-{functionality}-{verify-stream}.txt'
      - integration-test-plan:
          test-plan: '{project}-{functionality}.txt'
      - integration-jdk-version:
          jdkversion: '{verify-jdkversion}'
      - distribution-karaf-version:
          karaf-version: '{verify-karaf-version}'

    scm:
      - integration-gerrit-scm:
          basedir: 'test'
          refspec: '$GERRIT_REFSPEC'
          branch: 'master'

    triggers:
      - integration-trigger-patch-submitted:
          gerrit-server-name: '{gerrit-server-name}'
          project: 'integration/test'
          branch: 'master'
          files: 'csit/suites/{project}/**'

    builders:
      - lf-infra-pre-build
      - integration-stack-2-type:
          openstack-cloud: '{openstack-cloud}'
          openstack-heat-template: '{openstack-heat-template}'
          openstack-heat-template-dir: '{openstack-heat-template-dir}'
      - integration-install-robotframework
      - inject:
          properties-file: 'env.properties'
      - integration-get-slave-addresses
      - inject:
          properties-file: 'slave_addresses.txt'
      - integration-detect-variables
      - integration-install-common-functions
      - integration-deploy-controller-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: '{email-recipients}'
          email-prefix: '[{project}]'
      - integration-csit-publish:
          robot_other_files: ''
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-stack-delete:
          openstack-cloud: '{openstack-cloud}'
      - lf-infra-publish


######################
# inttest-csit-1node #
######################

- inttest_csit_1node: &inttest_csit_1node
    name: inttest-csit-1node

    #####################
    # Default variables #
    #####################

    openstack-cloud: vex
    openstack-heat-template: csit-2-instance-type.yaml
    openstack-heat-template-dir: openstack-hot

    odl_system_flavor: 'odl-highcpu-4'
    odl_system_image: 'ZZCI - CentOS 7 - builder - x86_64 - 20181010-215635.956'
    tools_system_count: 1
    tools_system_flavor: 'odl-highcpu-2'
    tools_system_image: 'ZZCI - Ubuntu 16.04 - mininet-ovs-25 - 20181029-223449.514'

    #####################
    # Job configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: '{scope}'
          debug-map: '{debug-map}'
          install-features: '{install-features}'
          use-features-boot: 'True'
      - integration-stack-2-type:
          vm_0_count: 1
          vm_0_flavor: '{odl_system_flavor}'
          vm_0_image: '{odl_system_image}'
          vm_1_count: '{tools_system_count}'
          vm_1_flavor: '{tools_system_flavor}'
          vm_1_image: '{tools_system_image}'
      - integration-distribution-branch:
          branch: '{branch}'
      - integration-distribution-stream:
          stream: '{stream}'
      - integration-script-plan:
          script-plan: '{project}.txt'
      - integration-config-plan:
          config-plan: '{project}.txt'
      - integration-stream-test-plan:
          stream-test-plan: '{project}-{functionality}-{stream}.txt'
      - integration-test-plan:
          test-plan: '{project}-{functionality}.txt'
      - integration-test-suites:
          test-suites: '{test-suites}'
      - integration-patch-refspec:
          branch: 'master'
      - integration-jdk-version:
          jdkversion: '{jre}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'

    scm:
      - integration-gerrit-scm:
          basedir: 'test'
          refspec: '$PATCHREFSPEC'
          branch: 'master'

    triggers:
      # we need this for not SR projects
      - integration-csit-trigger:
          jobs: '{trigger-jobs}'

    builders:
      - lf-infra-pre-build
      - integration-stack-2-type:
          openstack-cloud: '{openstack-cloud}'
          openstack-heat-template: '{openstack-heat-template}'
          openstack-heat-template-dir: '{openstack-heat-template-dir}'
      - integration-install-robotframework
      - inject:
          properties-file: 'env.properties'
      - integration-get-slave-addresses
      - inject:
          properties-file: 'slave_addresses.txt'
      - integration-detect-variables
      - integration-install-common-functions
      - integration-deploy-controller-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: '{email-recipients}'
          email-prefix: '[{project}]'
      - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{03-plot-title}'
            yaxis: '{03-plot-yaxis}'
            group: '{03-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{03-plot-data-file}-03-history.csv'
            series:
              - file: '{03-plot-data-file}'
                inclusion-flag: '{03-inclusion-flag}'
                exclude: '{03-exclude-value}'
                format: csv
          - title: '{04-plot-title}'
            yaxis: '{04-plot-yaxis}'
            group: '{04-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{04-plot-data-file}-04-history.csv'
            series:
              - file: '{04-plot-data-file}'
                inclusion-flag: '{04-inclusion-flag}'
                exclude: '{04-exclude-value}'
                format: csv
          - title: '{05-plot-title}'
            yaxis: '{05-plot-yaxis}'
            group: '{05-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{05-plot-data-file}-05-history.csv'
            series:
              - file: '{05-plot-data-file}'
                inclusion-flag: '{05-inclusion-flag}'
                exclude: '{05-exclude-value}'
                format: csv
          - title: '{06-plot-title}'
            yaxis: '{06-plot-yaxis}'
            group: '{06-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{06-plot-data-file}-06-history.csv'
            series:
              - file: '{06-plot-data-file}'
                inclusion-flag: '{06-inclusion-flag}'
                exclude: '{06-exclude-value}'
                format: csv
          - title: '{07-plot-title}'
            yaxis: '{07-plot-yaxis}'
            group: '{07-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{07-plot-data-file}-07-history.csv'
            series:
              - file: '{07-plot-data-file}'
                inclusion-flag: '{07-inclusion-flag}'
                exclude: '{07-exclude-value}'
                format: csv
          - title: '{08-plot-title}'
            yaxis: '{08-plot-yaxis}'
            group: '{08-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{08-plot-data-file}-08-history.csv'
            series:
              - file: '{08-plot-data-file}'
                inclusion-flag: '{08-inclusion-flag}'
                exclude: '{08-exclude-value}'
                format: csv
          - title: '{09-plot-title}'
            yaxis: '{09-plot-yaxis}'
            group: '{09-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{09-plot-data-file}-09-history.csv'
            series:
              - file: '{09-plot-data-file}'
                inclusion-flag: '{09-inclusion-flag}'
                exclude: '{09-exclude-value}'
                format: csv
          - title: '{10-plot-title}'
            yaxis: '{10-plot-yaxis}'
            group: '{10-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{10-plot-data-file}-10-history.csv'
            series:
              - file: '{10-plot-data-file}'
                inclusion-flag: '{10-inclusion-flag}'
                exclude: '{10-exclude-value}'
                format: csv
      - integration-csit-publish:
          robot_other_files: ''
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-stack-delete:
          openstack-cloud: '{openstack-cloud}'
      - lf-infra-publish

- job-template:
    name: '{prefix}{project}-csit-1node-{functionality}-{install}-{stream}'
    id: inttest-csit-1node
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_1node

- job-template:
    name: '{prefix}{project}-csit-1node-{functionality}-{install}-{stream}'
    id: inttest-csit-1node-custom
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_1node

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: '{scope}'
          debug-map: '{debug-map}'
          install-features: '{install-features}'
          use-features-boot: 'True'
      - integration-stack-2-type:
          vm_0_count: 1
          vm_0_flavor: '{odl_system_flavor}'
          vm_0_image: '{odl_system_image}'
          vm_1_count: '{tools_system_count}'
          vm_1_flavor: '{tools_system_flavor}'
          vm_1_image: '{tools_system_image}'
      - integration-distribution-branch:
          branch: '{branch}'
      - integration-distribution-stream:
          stream: '{stream}'
      - integration-script-plan:
          script-plan: '{project}.txt'
      - integration-config-plan:
          config-plan: '{project}.txt'
      - integration-stream-test-plan:
          stream-test-plan: '{project}-{functionality}-{stream}.txt'
      - integration-test-plan:
          test-plan: '{testplan}'
      - integration-test-suites:
          test-suites: '{test-suites}'
      - integration-patch-refspec:
          branch: 'master'
      - integration-jdk-version:
          jdkversion: '{jre}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'


- job-template:
    name: '{prefix}{project}-csit-verify-3node-{functionality}'
    id: inttest-csit-verify-3node
    <<: *inttest_csit_common

    #####################
    # Default variables #
    #####################

    openstack-cloud: vex
    openstack-heat-template: csit-2-instance-type.yaml
    openstack-heat-template-dir: openstack-hot

    odl_system_flavor: 'odl-highcpu-4'
    odl_system_image: 'ZZCI - CentOS 7 - builder - x86_64 - 20181010-215635.956'
    tools_system_count: 1
    tools_system_flavor: 'odl-highcpu-2'
    tools_system_image: 'ZZCI - Ubuntu 16.04 - mininet-ovs-25 - 20181029-223449.514'

    #####################
    # Job Configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: only
          debug-map: '{debug-map}'
          install-features: 'odl-jolokia,{install-features}'
          use-features-boot: 'True'
      - integration-stack-2-type:
          vm_0_count: 3
          vm_0_flavor: '{odl_system_flavor}'
          vm_0_image: '{odl_system_image}'
          vm_1_count: '{tools_system_count}'
          vm_1_flavor: '{tools_system_flavor}'
          vm_1_image: '{tools_system_image}'
      - integration-distribution-branch:
          branch: '{verify-branch}'
      - integration-distribution-stream:
          stream: '{verify-stream}'
      - integration-script-plan:
          script-plan: '{project}.txt'
      - integration-config-plan:
          config-plan: '{project}.txt'
      - integration-stream-test-plan:
          stream-test-plan: '{project}-{functionality}-{verify-stream}.txt'
      - integration-test-plan:
          test-plan: '{project}-{functionality}.txt'
      - integration-test-suites:
          test-suites: '{test-suites}'
      - integration-jdk-version:
          jdkversion: '{verify-jdkversion}'
      - distribution-karaf-version:
          karaf-version: '{verify-karaf-version}'

    scm:
      - integration-gerrit-scm:
          basedir: 'test'
          refspec: '$GERRIT_REFSPEC'
          branch: 'master'

    triggers:
      - integration-trigger-patch-submitted:
          gerrit-server-name: '{gerrit-server-name}'
          project: 'integration/test'
          branch: 'master'
          files: 'csit/suites/{project}/**'

    builders:
      - lf-infra-pre-build
      - integration-stack-2-type:
          openstack-cloud: '{openstack-cloud}'
          openstack-heat-template: '{openstack-heat-template}'
          openstack-heat-template-dir: '{openstack-heat-template-dir}'
      - integration-install-robotframework
      - inject:
          properties-file: 'env.properties'
      - integration-get-slave-addresses
      - inject:
          properties-file: 'slave_addresses.txt'
      - integration-detect-variables
      - integration-install-common-functions
      - integration-configure-clustering
      - integration-start-cluster-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: '{email-recipients}'
          email-prefix: '[{project}]'
      - integration-csit-publish:
          robot_other_files: ''
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-stack-delete:
          openstack-cloud: '{openstack-cloud}'
      - lf-infra-publish


######################
# inttest-csit-3node #
######################

- inttest_csit_3node: &inttest_csit_3node
    name: inttest-csit-3node

    #####################
    # Default variables #
    #####################

    openstack-cloud: vex
    openstack-heat-template: csit-2-instance-type.yaml
    openstack-heat-template-dir: openstack-hot

    odl_system_flavor: 'odl-highcpu-4'
    odl_system_image: 'ZZCI - CentOS 7 - builder - x86_64 - 20181010-215635.956'
    tools_system_count: 1
    tools_system_flavor: 'odl-highcpu-2'
    tools_system_image: 'ZZCI - Ubuntu 16.04 - mininet-ovs-25 - 20181029-223449.514'

    #####################
    # Job configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: '{scope}'
          debug-map: '{debug-map}'
          install-features: 'odl-jolokia,{install-features}'
          use-features-boot: 'True'
      - integration-stack-2-type:
          vm_0_count: 3
          vm_0_flavor: '{odl_system_flavor}'
          vm_0_image: '{odl_system_image}'
          vm_1_count: '{tools_system_count}'
          vm_1_flavor: '{tools_system_flavor}'
          vm_1_image: '{tools_system_image}'
      - integration-distribution-branch:
          branch: '{branch}'
      - integration-distribution-stream:
          stream: '{stream}'
      - integration-script-plan:
          script-plan: '{project}.txt'
      - integration-config-plan:
          config-plan: '{project}.txt'
      - integration-stream-test-plan:
          stream-test-plan: '{project}-{functionality}-{stream}.txt'
      - integration-test-plan:
          test-plan: '{project}-{functionality}.txt'
      - integration-test-suites:
          test-suites: '{test-suites}'
      - integration-patch-refspec:
          branch: 'master'
      - integration-jdk-version:
          jdkversion: '{jre}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'

    scm:
      - integration-gerrit-scm:
          basedir: 'test'
          refspec: '$PATCHREFSPEC'
          branch: 'master'

    triggers:
      # we need this for not SR projects
      - integration-csit-trigger:
          jobs: '{trigger-jobs}'

    builders:
      - lf-infra-pre-build
      - integration-stack-2-type:
          openstack-cloud: '{openstack-cloud}'
          openstack-heat-template: '{openstack-heat-template}'
          openstack-heat-template-dir: '{openstack-heat-template-dir}'
      - integration-install-robotframework
      - inject:
          properties-file: 'env.properties'
      - integration-get-slave-addresses
      - inject:
          properties-file: 'slave_addresses.txt'
      - integration-detect-variables
      - integration-install-common-functions
      - integration-configure-clustering
      - integration-start-cluster-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: '{email-recipients}'
          email-prefix: '[{project}]'
      - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{03-plot-title}'
            yaxis: '{03-plot-yaxis}'
            group: '{03-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{03-plot-data-file}-03-history.csv'
            series:
              - file: '{03-plot-data-file}'
                inclusion-flag: '{03-inclusion-flag}'
                exclude: '{03-exclude-value}'
                format: csv
          - title: '{04-plot-title}'
            yaxis: '{04-plot-yaxis}'
            group: '{04-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{04-plot-data-file}-04-history.csv'
            series:
              - file: '{04-plot-data-file}'
                inclusion-flag: '{04-inclusion-flag}'
                exclude: '{04-exclude-value}'
                format: csv
          - title: '{05-plot-title}'
            yaxis: '{05-plot-yaxis}'
            group: '{05-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{05-plot-data-file}-05-history.csv'
            series:
              - file: '{05-plot-data-file}'
                inclusion-flag: '{05-inclusion-flag}'
                exclude: '{05-exclude-value}'
                format: csv
          - title: '{06-plot-title}'
            yaxis: '{06-plot-yaxis}'
            group: '{06-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{06-plot-data-file}-06-history.csv'
            series:
              - file: '{06-plot-data-file}'
                inclusion-flag: '{06-inclusion-flag}'
                exclude: '{06-exclude-value}'
                format: csv
          - title: '{07-plot-title}'
            yaxis: '{07-plot-yaxis}'
            group: '{07-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{07-plot-data-file}-07-history.csv'
            series:
              - file: '{07-plot-data-file}'
                inclusion-flag: '{07-inclusion-flag}'
                exclude: '{07-exclude-value}'
                format: csv
          - title: '{08-plot-title}'
            yaxis: '{08-plot-yaxis}'
            group: '{08-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{08-plot-data-file}-08-history.csv'
            series:
              - file: '{08-plot-data-file}'
                inclusion-flag: '{08-inclusion-flag}'
                exclude: '{08-exclude-value}'
                format: csv
          - title: '{09-plot-title}'
            yaxis: '{09-plot-yaxis}'
            group: '{09-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{09-plot-data-file}-09-history.csv'
            series:
              - file: '{09-plot-data-file}'
                inclusion-flag: '{09-inclusion-flag}'
                exclude: '{09-exclude-value}'
                format: csv
          - title: '{10-plot-title}'
            yaxis: '{10-plot-yaxis}'
            group: '{10-plot-group}'
            num-builds: '180'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{10-plot-data-file}-10-history.csv'
            series:
              - file: '{10-plot-data-file}'
                inclusion-flag: '{10-inclusion-flag}'
                exclude: '{10-exclude-value}'
                format: csv
      - integration-csit-publish:
          robot_other_files: ''
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-stack-delete:
          openstack-cloud: '{openstack-cloud}'
      - lf-infra-publish

- job-template:
    name: '{prefix}{project}-csit-3node-{functionality}-{install}-{stream}'
    id: inttest-csit-3node
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_3node

- job-template:
    name: '{prefix}{project}-csit-3node-{functionality}-{install}-{stream}'
    id: inttest-csit-3node-custom
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_3node

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: '{scope}'
          debug-map: '{debug-map}'
          install-features: 'odl-jolokia,{install-features}'
          use-features-boot: 'True'
      - integration-stack-2-type:
          vm_0_count: 3
          vm_0_flavor: '{odl_system_flavor}'
          vm_0_image: '{odl_system_image}'
          vm_1_count: '{tools_system_count}'
          vm_1_flavor: '{tools_system_flavor}'
          vm_1_image: '{tools_system_image}'
      - integration-distribution-branch:
          branch: '{branch}'
      - integration-distribution-stream:
          stream: '{stream}'
      - integration-script-plan:
          script-plan: '{project}.txt'
      - integration-config-plan:
          config-plan: '{project}.txt'
      - integration-stream-test-plan:
          stream-test-plan: '{project}-{functionality}-{stream}.txt'
      - integration-test-plan:
          test-plan: '{testplan}'
      - integration-test-suites:
          test-suites: '{test-suites}'
      - integration-patch-refspec:
          branch: 'master'
      - integration-jdk-version:
          jdkversion: '{jre}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'


- job-template:
    name: '{prefix}{project}-csit-3node-docker-{functionality}-{install}-{stream}'
    id: inttest-csit-3node-docker
    <<: *inttest_csit_common

    #####################
    # Default variables #
    #####################

    openstack-cloud: vex
    openstack-heat-template: csit-2-instance-type.yaml
    openstack-heat-template-dir: openstack-hot

    odl_system_count: 1
    odl_system_flavor: 'odl-highcpu-4'
    odl_system_image: 'ZZCI - CentOS 7 - builder - x86_64 - 20181010-215635.956'
    docker_system_count: 1
    docker_system_flavor: 'odl-standard-1'
    docker_system_image: 'ZZCI - CentOS 7 - docker - 20180723-235456.035'

    #####################
    # Job Configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: '{scope}'
          debug-map: '{debug-map}'
          install-features: 'odl-jolokia,{install-features}'
          use-features-boot: 'True'
      - integration-stack-2-type:
          vm_0_count: 3
          vm_0_flavor: '{odl_system_flavor}'
          vm_0_image: '{odl_system_image}'
          vm_1_count: '{docker_system_count}'
          vm_1_flavor: '{docker_system_flavor}'
          vm_1_image: '{docker_system_image}'
      - integration-distribution-branch:
          branch: '{branch}'
      - integration-distribution-stream:
          stream: '{stream}'
      - integration-script-plan:
          script-plan: '{project}.txt'
      - integration-config-plan:
          config-plan: '{project}.txt'
      - integration-stream-test-plan:
          stream-test-plan: '{project}-{functionality}-{stream}.txt'
      - integration-test-plan:
          test-plan: '{project}-{functionality}.txt'
      - integration-patch-refspec:
          branch: 'master'
      - integration-jdk-version:
          jdkversion: '{jre}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'

    scm:
      - integration-gerrit-scm:
          basedir: 'test'
          refspec: '$PATCHREFSPEC'
          branch: 'master'

    builders:
      - lf-infra-pre-build
      - integration-stack-2-type:
          openstack-cloud: '{openstack-cloud}'
          openstack-heat-template: '{openstack-heat-template}'
          openstack-heat-template-dir: '{openstack-heat-template-dir}'
      - integration-install-robotframework
      - inject:
          properties-file: 'env.properties'
      - integration-get-slave-addresses
      - inject:
          properties-file: 'slave_addresses.txt'
      - integration-detect-variables
      - integration-install-common-functions
      - integration-configure-clustering
      - integration-start-cluster-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: '{email-recipients}'
          email-prefix: '[{project}]'
      - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '5400'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '5400'
            keep-records: true
            style: line
            use-description: false
            # yamllint disable-line rule:line-length
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
      - integration-csit-publish:
          robot_other_files: ''
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-stack-delete:
          openstack-cloud: '{openstack-cloud}'
      - lf-infra-publish


#################################
# inttest-csit-hwvtep-openstack #
#################################

- inttest_csit_hwvtep_openstack: &inttest_csit_hwvtep_openstack
    name: inttest-csit-hwvtep-openstack

    #####################
    # Default variables #
    #####################

    # TODO: Add default variables here

    #####################
    # Job configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: ''
          debug-map: '{debug-map}'
          install-features: '{install-features}'
          use-features-boot: '{use-features-boot}'
      - integration-distribution-branch:
          branch: '{branch}'
      - integration-distribution-stream:
          stream: '{stream}'
      - integration-script-plan:
          script-plan: '{project}.txt'
      - integration-config-plan:
          config-plan: '{project}.txt'
      - integration-test-plan:
          test-plan: '{project}-{functionality}.txt'
      - integration-test-suites:
          test-suites: '{test-suites}'
      - integration-patch-refspec:
          branch: 'master'
      - integration-jdk-version:
          jdkversion: '{jre}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'
      - string:
          name: OPENSTACK_BRANCH
          default: '{openstack-branch}'
          description: 'Openstack version to use with devstack'
      - string:
          name: DEVSTACK_HASH
          default: '{devstack-hash}'
          description: 'devstack hash to checkout'
      - string:
          name: ODL_ML2_DRIVER_REPO
          default: '{odl-ml2-driver-repo}'
          description: 'URL to fetch networking-odl driver'
      - string:
          name: ODL_ML2_BRANCH
          default: '{odl-ml2-branch}'
          description: 'Version of networking-odl to checkout from the repo'
      - string:
          name: ODL_ML2_DRIVER_VERSION
          default: '{odl-ml2-driver-version}'
          description: 'Mode of networking-odl (v1 or v2)'
      - string:
          name: ODL_ML2_PORT_BINDING
          default: '{odl-ml2-port-binding}'
          description: 'Method of networking-odl port-binding (pseudo-agentdb-binding or legacy-port-binding or
          network-topology)'
      - string:
          name: DEVSTACK_KUBERNETES_PLUGIN_REPO
          default: '{devstack-kubernetes-plugin-repo}'
          description: 'URL to fetch kubernetes devstack plugin'
      - string:
          name: DEVSTACK_LBAAS_PLUGIN_REPO
          default: '{devstack-lbaas-plugin-repo}'
          description: 'URL to fetch neutron-lbaas devstack plugin'
      - string:
          name: DEVSTACK_NETWORKING_SFC_PLUGIN_REPO
          default: '{devstack-networking-sfc-plugin-repo}'
          description: 'URL to fetch neutron-lbaas devstack plugin'
      - string:
          name: IPSEC_VXLAN_TUNNELS_ENABLED
          default: '{ipsec-vxlan-tunnels-enabled}'
          description: 'Enable ipsec over vxlan support for all controllers and computes'
      - string:
          name: PUBLIC_BRIDGE
          default: '{public-bridge}'
          description: 'Specifies public bridge for provider and external networking'
      - string:
          name: ENABLE_HAPROXY_FOR_NEUTRON
          default: '{enable-haproxy}'
          description: 'Enable HAProxy for using neutron interface as HA'
      - string:
          name: ENABLE_OS_SERVICES
          default: '{enable-openstack-services}'
          description: 'comma separated list of services to enable on controller nodes'
      - string:
          name: ENABLE_OS_COMPUTE_SERVICES
          default: '{enable-openstack-compute-services}'
          description: 'comma separated list of services to enable on compute nodes'
      - string:
          name: ENABLE_OS_NETWORK_SERVICES
          default: '{enable-openstack-network-services}'
          description: 'comma seperated list of network services to enable'
      - string:
          name: ENABLE_OS_PLUGINS
          default: '{enable-openstack-plugins}'
          description: 'comma seperated list of plugins to enable'
      - string:
          name: DISABLE_OS_SERVICES
          default: '{disable-openstack-services}'
          description: 'comma seperated list of services to enable'
      - string:
          name: TENANT_NETWORK_TYPE
          default: '{tenant-network-type}'
          description: 'Tenant Network Type supported by the implementation'
      - string:
          name: SECURITY_GROUP_MODE
          default: '{security-group-mode}'
          description: 'Security Group Mode to be used in netvirt aclservice config'
      - string:
          name: ENABLE_ITM_DIRECT_TUNNELS
          default: '{enable-itm-direct-tunnels}'
          description: 'Tunnel Configuration mode to be used in genius ifm config'
      - string:
          name: PUBLIC_PHYSICAL_NETWORK
          default: '{public-physical-network}'
          description: 'provider physical network used for flat/vlan networks'
      - string:
          name: ENABLE_NETWORKING_L2GW
          default: '{enable-networking-l2gw}'
          description: 'Enable networking L2gw'
      - string:
          name: NETWORKING_L2GW_DRIVER
          default: '{networking-l2gw-repo}'
          description: 'URL to fetch networking-l2gw driver'
      - string:
          name: CREATE_INITIAL_NETWORKS
          default: '{create-initial-networks}'
          description: 'Toggles the option of letting devstack create initial networks (True/False)'
      - string:
          name: LBAAS_SERVICE_PROVIDER
          default: '{lbaas-service-provider}'
          description: 'The NEUTRON_LBAAS_SERVICE_PROVIDERV2 value to be used in local.conf - only relevant when using
          neutron-lbaas'
      - string:
          name: ODL_SFC_DRIVER
          default: '{odl-sfc-driver}'
          description: 'The SFC driver to be used in local.conf - only relevant when using networking-sfc'
      - string:
          name: ODL_SNAT_MODE
          default: '{odl-snat-mode}'
          description: 'The SNAT mode to be configured - options are conntrack/controller.'
      - string:
          name: OVS_INSTALL
          default: '{ovs-install}'
          description: 'Install a custom OVS. It can be an OVS version to build (like v2.9.2 or v2.6.1-nsh) or a yum
          repo url to pull from.'

    scm:
      - integration-gerrit-scm:
          basedir: 'test'
          refspec: '$PATCHREFSPEC'
          branch: 'master'

    triggers:
      - timed: '{schedule}'

    builders:
      - lf-infra-pre-build
      - integration-infra-stack-4-type:
          stack-template: '{stack-template}'
          vm_0_count: '{odl_system_count}'
          vm_0_flavor: '{odl_system_flavor}'
          vm_0_image: '{odl_system_image}'
          vm_1_count: '{openstack_system_count}'
          vm_1_flavor: '{openstack_system_flavor}'
          vm_1_image: '{openstack_system_image}'
          vm_2_count: '{openstack_system2_count}'
          vm_2_flavor: '{openstack_system2_flavor}'
          vm_2_image: '{openstack_system2_image}'
          vm_3_count: '{tools_system_count}'
          vm_3_flavor: '{tools_system_flavor}'
          vm_3_image: '{tools_system_image}'
      - integration-install-robotframework
      - inject:
          properties-file: 'env.properties'
      - integration-get-slave-addresses
      - inject:
          properties-file: 'slave_addresses.txt'
      - integration-detect-variables
      - integration-install-common-functions
      - integration-deploy-controller-run-test
      - integration-deploy-openstack-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: '{email-recipients}'
          email-prefix: '[{project}]'
      - integration-csit-collect-netvirt-logs
      - integration-csit-publish:
          robot_other_files:
            - tempest_results.html
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-infra-publish

- job-template:
    # yamllint disable-line rule:line-length
    name: '{prefix}{project}-csit-hwvtep-{topology}-{os-cmb-cnt}cmb-{os-ctl-cnt}ctl-{os-cmp-cnt}cmp-openstack-{openstack}-{functionality}-{stream}'
    id: inttest-csit-hwvtep-openstack
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_hwvtep_openstack

- job-template:
    # yamllint disable-line rule:line-length
    name: '{prefix}{project}-csit-hwvtep-{topology}-{os-cmb-cnt}cmb-{os-ctl-cnt}ctl-{os-cmp-cnt}cmp-openstack-{openstack}-{functionality}-{stream}'
    id: inttest-csit-hwvtep-openstack-custom
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_hwvtep_openstack

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: ''
          debug-map: '{debug-map}'
          install-features: '{install-features}'
          use-features-boot: '{use-features-boot}'
      - integration-distribution-branch:
          branch: '{branch}'
      - integration-distribution-stream:
          stream: '{stream}'
      - integration-script-plan:
          script-plan: '{project}.txt'
      - integration-config-plan:
          config-plan: '{project}.txt'
      - integration-test-plan:
          test-plan: '{testplan}'
      - integration-test-suites:
          test-suites: '{test-suites}'
      - integration-patch-refspec:
          branch: 'master'
      - integration-jdk-version:
          jdkversion: '{jre}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'
      - string:
          name: OPENSTACK_BRANCH
          default: '{openstack-branch}'
          description: 'Openstack version to use with devstack'
      - string:
          name: DEVSTACK_HASH
          default: '{devstack-hash}'
          description: 'devstack hash to checkout'
      - string:
          name: ODL_ML2_DRIVER_REPO
          default: '{odl-ml2-driver-repo}'
          description: 'URL to fetch networking-odl driver'
      - string:
          name: ODL_ML2_BRANCH
          default: '{odl-ml2-branch}'
          description: 'Version of networking-odl to checkout from the repo'
      - string:
          name: ODL_ML2_DRIVER_VERSION
          default: '{odl-ml2-driver-version}'
          description: 'Mode of networking-odl (v1 or v2)'
      - string:
          name: ODL_ML2_PORT_BINDING
          default: '{odl-ml2-port-binding}'
          description: 'Method of networking-odl port-binding (pseudo-agentdb-binding or legacy-port-binding or
          network-topology)'
      - string:
          name: DEVSTACK_KUBERNETES_PLUGIN_REPO
          default: '{devstack-kubernetes-plugin-repo}'
          description: 'URL to fetch kubernetes devstack plugin'
      - string:
          name: DEVSTACK_LBAAS_PLUGIN_REPO
          default: '{devstack-lbaas-plugin-repo}'
          description: 'URL to fetch neutron-lbaas devstack plugin'
      - string:
          name: DEVSTACK_NETWORKING_SFC_PLUGIN_REPO
          default: '{devstack-networking-sfc-plugin-repo}'
          description: 'URL to fetch neutron-lbaas devstack plugin'
      - string:
          name: IPSEC_VXLAN_TUNNELS_ENABLED
          default: '{ipsec-vxlan-tunnels-enabled}'
          description: 'Enable ipsec over vxlan support for all controllers and computes'
      - string:
          name: PUBLIC_BRIDGE
          default: '{public-bridge}'
          description: 'Specifies public bridge for provider and external networking'
      - string:
          name: ENABLE_HAPROXY_FOR_NEUTRON
          default: '{enable-haproxy}'
          description: 'Enable HAProxy for using neutron interface as HA'
      - string:
          name: ENABLE_OS_SERVICES
          default: '{enable-openstack-services}'
          description: 'comma separated list of services to enable on controller nodes'
      - string:
          name: ENABLE_OS_COMPUTE_SERVICES
          default: '{enable-openstack-compute-services}'
          description: 'comma separated list of services to enable on compute nodes'
      - string:
          name: ENABLE_OS_NETWORK_SERVICES
          default: '{enable-openstack-network-services}'
          description: 'comma seperated list of network services to enable'
      - string:
          name: ENABLE_OS_PLUGINS
          default: '{enable-openstack-plugins}'
          description: 'comma seperated list of plugins to enable'
      - string:
          name: DISABLE_OS_SERVICES
          default: '{disable-openstack-services}'
          description: 'comma seperated list of services to enable'
      - string:
          name: TENANT_NETWORK_TYPE
          default: '{tenant-network-type}'
          description: 'Tenant Network Type supported by the implementation'
      - string:
          name: SECURITY_GROUP_MODE
          default: '{security-group-mode}'
          description: 'Security Group Mode to be used in netvirt aclservice config'
      - string:
          name: ENABLE_ITM_DIRECT_TUNNELS
          default: '{enable-itm-direct-tunnels}'
          description: 'Tunnel Configuration mode to be used in genius ifm config'
      - string:
          name: PUBLIC_PHYSICAL_NETWORK
          default: '{public-physical-network}'
          description: 'provider physical network used for flat/vlan networks'
      - string:
          name: ENABLE_NETWORKING_L2GW
          default: '{enable-networking-l2gw}'
          description: 'Enable networking L2gw'
      - string:
          name: NETWORKING_L2GW_DRIVER
          default: '{networking-l2gw-repo}'
          description: 'URL to fetch networking-l2gw driver'
      - string:
          name: CREATE_INITIAL_NETWORKS
          default: '{create-initial-networks}'
          description: 'Toggles the option of letting devstack create initial networks (True/False)'
      - string:
          name: LBAAS_SERVICE_PROVIDER
          default: '{lbaas-service-provider}'
          description: 'The NEUTRON_LBAAS_SERVICE_PROVIDERV2 value to be used in local.conf - only relevant when using
          neutron-lbaas'
      - string:
          name: ODL_SFC_DRIVER
          default: '{odl-sfc-driver}'
          description: 'The SFC driver to be used in local.conf - only relevant when using networking-sfc'
      - string:
          name: ODL_SNAT_MODE
          default: '{odl-snat-mode}'
          description: 'The SNAT mode to be configured - options are conntrack/controller.'
      - string:
          name: OVS_INSTALL
          default: '{ovs-install}'
          description: 'Install a custom OVS. It can be an OVS version to build (like v2.9.2 or v2.6.1-nsh) or a yum
          repo url to pull from.'


##########################
# inttest-csit-openstack #
##########################

- inttest_csit_openstack: &inttest_csit_openstack
    name: inttest-csit-openstack

    #####################
    # Default variables #
    #####################

    # TODO: Add default variables here

    #####################
    # Job configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: ''
          debug-map: '{debug-map}'
          install-features: '{install-features}'
          use-features-boot: '{use-features-boot}'
      - integration-distribution-branch:
          branch: '{branch}'
      - integration-distribution-stream:
          stream: '{stream}'
      - integration-script-plan:
          script-plan: '{project}.txt'
      - integration-config-plan:
          config-plan: '{project}.txt'
      - integration-test-plan:
          test-plan: '{project}-{functionality}.txt'
      - integration-test-suites:
          test-suites: '{test-suites}'
      - integration-patch-refspec:
          branch: 'master'
      - integration-jdk-version:
          jdkversion: '{jre}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'
      - string:
          name: OPENSTACK_BRANCH
          default: '{openstack-branch}'
          description: 'Openstack version to use with devstack'
      - string:
          name: DEVSTACK_HASH
          default: '{devstack-hash}'
          description: 'devstack hash to checkout'
      - string:
          name: ODL_ML2_DRIVER_REPO
          default: '{odl-ml2-driver-repo}'
          description: 'URL to fetch networking-odl driver'
      - string:
          name: ODL_ML2_BRANCH
          default: '{odl-ml2-branch}'
          description: 'Version of networking-odl to checkout from the repo'
      - string:
          name: ODL_ML2_DRIVER_VERSION
          default: '{odl-ml2-driver-version}'
          description: 'Mode of networking-odl (v1 or v2)'
      - string:
          name: ODL_ML2_PORT_BINDING
          default: '{odl-ml2-port-binding}'
          description: 'Method of networking-odl port-binding (pseudo-agentdb-binding or legacy-port-binding or
          network-topology)'
      - string:
          name: ENABLE_GRE_TYPE_DRIVERS
          default: '{enable-gre-type-driver}'
          description: 'Enable gre tunnel'
      - string:
          name: DEVSTACK_KUBERNETES_PLUGIN_REPO
          default: '{devstack-kubernetes-plugin-repo}'
          description: 'URL to fetch kubernetes devstack plugin'
      - string:
          name: DEVSTACK_LBAAS_PLUGIN_REPO
          default: '{devstack-lbaas-plugin-repo}'
          description: 'URL to fetch neutron-lbaas devstack plugin'
      - string:
          name: DEVSTACK_NETWORKING_SFC_PLUGIN_REPO
          default: '{devstack-networking-sfc-plugin-repo}'
          description: 'URL to fetch neutron-lbaas devstack plugin'
      - string:
          name: IPSEC_VXLAN_TUNNELS_ENABLED
          default: '{ipsec-vxlan-tunnels-enabled}'
          description: 'Enable ipsec over vxlan support for all controllers and computes'
      - string:
          name: PUBLIC_BRIDGE
          default: '{public-bridge}'
          description: 'Specifies public bridge for provider and external networking'
      - string:
          name: ENABLE_HAPROXY_FOR_NEUTRON
          default: '{enable-haproxy}'
          description: 'Enable HAProxy for using neutron interface as HA'
      - string:
          name: ENABLE_OS_SERVICES
          default: '{enable-openstack-services}'
          description: 'comma seperated list of services to enable'
      - string:
          name: ENABLE_OS_COMPUTE_SERVICES
          default: '{enable-openstack-compute-services}'
          description: 'comma separated list of services to enable on compute nodes'
      - string:
          name: ENABLE_OS_NETWORK_SERVICES
          default: '{enable-openstack-network-services}'
          description: 'comma seperated list of network services to enable'
      - string:
          name: ENABLE_OS_PLUGINS
          default: '{enable-openstack-plugins}'
          description: 'comma seperated list of plugins to enable'
      - string:
          name: DISABLE_OS_SERVICES
          default: '{disable-openstack-services}'
          description: 'comma seperated list of services to enable'
      - string:
          name: TENANT_NETWORK_TYPE
          default: '{tenant-network-type}'
          description: 'Tenant Network Type supported by the implementation'
      - string:
          name: SECURITY_GROUP_MODE
          default: '{security-group-mode}'
          description: 'Security Group Mode to be used in netvirt aclservice config'
      - string:
          name: ENABLE_ITM_DIRECT_TUNNELS
          default: '{enable-itm-direct-tunnels}'
          description: 'Tunnel Configuration mode to be used in genius ifm config'
      - string:
          name: PUBLIC_PHYSICAL_NETWORK
          default: '{public-physical-network}'
          description: 'provider physical network used for flat/vlan networks'
      - string:
          name: ENABLE_NETWORKING_L2GW
          default: '{enable-networking-l2gw}'
          description: 'Enable networking L2gw'
      - string:
          name: NETWORKING_L2GW_DRIVER
          default: '{networking-l2gw-repo}'
          description: 'URL to fetch networking-l2gw driver'
      - string:
          name: CREATE_INITIAL_NETWORKS
          default: '{create-initial-networks}'
          description: 'Toggles the option of letting devstack create initial networks (True/False)'
      - string:
          name: LBAAS_SERVICE_PROVIDER
          default: '{lbaas-service-provider}'
          description: 'The NEUTRON_LBAAS_SERVICE_PROVIDERV2 value to be used in local.conf - only relevant when using
          neutron-lbaas'
      - string:
          name: ODL_SFC_DRIVER
          default: '{odl-sfc-driver}'
          description: 'The SFC driver to be used in local.conf - only relevant when using networking-sfc'
      - string:
          name: ODL_SNAT_MODE
          default: '{odl-snat-mode}'
          description: 'The SNAT mode to be configured - options are conntrack/controller.'
      - string:
          name: OVS_INSTALL
          default: '{ovs-install}'
          description: 'Install a custom OVS. It can be an OVS version to build (like v2.9.2 or v2.6.1-nsh) or a yum
          repo url to pull from.'

    scm:
      - integration-gerrit-scm:
          basedir: 'test'
          refspec: '$PATCHREFSPEC'
          branch: 'master'

    triggers:
      - timed: '{schedule}'

    builders:
      - lf-infra-pre-build
      - integration-infra-stack-4-type:
          stack-template: '{stack-template}'
          vm_0_count: '{odl_system_count}'
          vm_0_flavor: '{odl_system_flavor}'
          vm_0_image: '{odl_system_image}'
          vm_1_count: '{openstack_system_count}'
          vm_1_flavor: '{openstack_system_flavor}'
          vm_1_image: '{openstack_system_image}'
          vm_2_count: '{openstack_system2_count}'
          vm_2_flavor: '{openstack_system2_flavor}'
          vm_2_image: '{openstack_system2_image}'
          vm_3_count: '{tools_system_count}'
          vm_3_flavor: '{tools_system_flavor}'
          vm_3_image: '{tools_system_image}'
      - integration-install-robotframework
      - inject:
          properties-file: 'env.properties'
      - integration-get-slave-addresses
      - inject:
          properties-file: 'slave_addresses.txt'
      - integration-detect-variables
      - integration-install-common-functions
      - integration-deploy-controller-run-test
      - integration-deploy-openstack-run-test
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: '{email-recipients}'
          email-prefix: '[{project}]'
      - integration-csit-collect-netvirt-logs
      - integration-csit-publish:
          robot_other_files:
            - tempest_results.html
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-infra-publish

- job-template:
    # yamllint disable-line rule:line-length
    name: '{prefix}{project}-csit-{topology}-{os-cmb-cnt}cmb-{os-ctl-cnt}ctl-{os-cmp-cnt}cmp-openstack-{openstack}-{functionality}-{stream}'
    id: inttest-csit-openstack
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_openstack

- job-template:
    # yamllint disable-line rule:line-length
    name: '{prefix}{project}-csit-{topology}-{os-cmb-cnt}cmb-{os-ctl-cnt}ctl-{os-cmp-cnt}cmp-openstack-{openstack}-{functionality}-{stream}'
    id: inttest-csit-openstack-custom
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_openstack

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: ''
          debug-map: '{debug-map}'
          install-features: '{install-features}'
          use-features-boot: '{use-features-boot}'
      - integration-distribution-branch:
          branch: '{branch}'
      - integration-distribution-stream:
          stream: '{stream}'
      - integration-script-plan:
          script-plan: '{project}.txt'
      - integration-config-plan:
          config-plan: '{project}.txt'
      - integration-test-plan:
          test-plan: '{testplan}'
      - integration-test-suites:
          test-suites: '{test-suites}'
      - integration-patch-refspec:
          branch: 'master'
      - integration-jdk-version:
          jdkversion: '{jre}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'
      - string:
          name: OPENSTACK_BRANCH
          default: '{openstack-branch}'
          description: 'Openstack version to use with devstack'
      - string:
          name: DEVSTACK_HASH
          default: '{devstack-hash}'
          description: 'devstack hash to checkout'
      - string:
          name: ODL_ML2_DRIVER_REPO
          default: '{odl-ml2-driver-repo}'
          description: 'URL to fetch networking-odl driver'
      - string:
          name: ODL_ML2_BRANCH
          default: '{odl-ml2-branch}'
          description: 'Version of networking-odl to checkout from the repo'
      - string:
          name: ODL_ML2_DRIVER_VERSION
          default: '{odl-ml2-driver-version}'
          description: 'Mode of networking-odl (v1 or v2)'
      - string:
          name: ODL_ML2_PORT_BINDING
          default: '{odl-ml2-port-binding}'
          description: 'Method of networking-odl port-binding (pseudo-agentdb-binding or legacy-port-binding or
          network-topology)'
      - string:
          name: ENABLE_GRE_TYPE_DRIVERS
          default: '{enable-gre-type-driver}'
          description: 'Enable gre tunnel'
      - string:
          name: DEVSTACK_KUBERNETES_PLUGIN_REPO
          default: '{devstack-kubernetes-plugin-repo}'
          description: 'URL to fetch kubernetes devstack plugin'
      - string:
          name: DEVSTACK_LBAAS_PLUGIN_REPO
          default: '{devstack-lbaas-plugin-repo}'
          description: 'URL to fetch neutron-lbaas devstack plugin'
      - string:
          name: DEVSTACK_NETWORKING_SFC_PLUGIN_REPO
          default: '{devstack-networking-sfc-plugin-repo}'
          description: 'URL to fetch neutron-lbaas devstack plugin'
      - string:
          name: IPSEC_VXLAN_TUNNELS_ENABLED
          default: '{ipsec-vxlan-tunnels-enabled}'
          description: 'Enable ipsec over vxlan support for all controllers and computes'
      - string:
          name: PUBLIC_BRIDGE
          default: '{public-bridge}'
          description: 'Specifies public bridge for provider and external networking'
      - string:
          name: ENABLE_HAPROXY_FOR_NEUTRON
          default: '{enable-haproxy}'
          description: 'Enable HAProxy for using neutron interface as HA'
      - string:
          name: ENABLE_OS_SERVICES
          default: '{enable-openstack-services}'
          description: 'comma seperated list of services to enable'
      - string:
          name: ENABLE_OS_COMPUTE_SERVICES
          default: '{enable-openstack-compute-services}'
          description: 'comma separated list of services to enable on compute nodes'
      - string:
          name: ENABLE_OS_NETWORK_SERVICES
          default: '{enable-openstack-network-services}'
          description: 'comma seperated list of network services to enable'
      - string:
          name: ENABLE_OS_PLUGINS
          default: '{enable-openstack-plugins}'
          description: 'comma seperated list of plugins to enable'
      - string:
          name: DISABLE_OS_SERVICES
          default: '{disable-openstack-services}'
          description: 'comma seperated list of services to enable'
      - string:
          name: TENANT_NETWORK_TYPE
          default: '{tenant-network-type}'
          description: 'Tenant Network Type supported by the implementation'
      - string:
          name: SECURITY_GROUP_MODE
          default: '{security-group-mode}'
          description: 'Security Group Mode to be used in netvirt aclservice config'
      - string:
          name: ENABLE_ITM_DIRECT_TUNNELS
          default: '{enable-itm-direct-tunnels}'
          description: 'Tunnel Configuration mode to be used in genius ifm config'
      - string:
          name: PUBLIC_PHYSICAL_NETWORK
          default: '{public-physical-network}'
          description: 'provider physical network used for flat/vlan networks'
      - string:
          name: ENABLE_NETWORKING_L2GW
          default: '{enable-networking-l2gw}'
          description: 'Enable networking L2gw'
      - string:
          name: NETWORKING_L2GW_DRIVER
          default: '{networking-l2gw-repo}'
          description: 'URL to fetch networking-l2gw driver'
      - string:
          name: CREATE_INITIAL_NETWORKS
          default: '{create-initial-networks}'
          description: 'Toggles the option of letting devstack create initial networks (True/False)'
      - string:
          name: LBAAS_SERVICE_PROVIDER
          default: '{lbaas-service-provider}'
          description: 'The NEUTRON_LBAAS_SERVICE_PROVIDERV2 value to be used in local.conf - only relevant when using
          neutron-lbaas'
      - string:
          name: ODL_SFC_DRIVER
          default: '{odl-sfc-driver}'
          description: 'The SFC driver to be used in local.conf - only relevant when using networking-sfc'
      - string:
          name: ODL_SNAT_MODE
          default: '{odl-snat-mode}'
          description: 'The SNAT mode to be configured - options are conntrack/controller.'
      - string:
          name: OVS_INSTALL
          default: '{ovs-install}'
          description: 'Install a custom OVS. It can be an OVS version to build (like v2.9.2 or v2.6.1-nsh) or a yum
          repo url to pull from.'

# Template: {project}-patch-test-{stream}
# Goal: Build a patch and run project specific system test on a distribution containing the change
# Operation: This job template builds a patch, creates a distribution containing the patch, and
# triggers the project system test defined in {csit-list} when gerrit receives test-{project} keyword

- job-template:
    name: '{prefix}{project}-patch-test-{feature}-{stream}'
    id: inttest-patch-test
    <<: *inttest_csit_common

    build-timeout: 720

    parameters:
      - opendaylight-infra-parameters:
          os-cloud: '{os-cloud}'
          project: '{project}'
          branch: '{branch}'
          refspec: 'refs/heads/{branch}'
          artifacts: '{archive-artifacts}'
      - integration-distribution-branch:
          branch: '{branch}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'
      - integration-distribution-git-url:
          git-url: '{git-url}'
      - string:
          name: feature
          default: 'all'
          description: 'Specific feature test for patch'
      - maven-exec:
          maven-version: mvn35

    scm:
      - integration-gerrit-scm:
          basedir: '{project}'
          refspec: '$GERRIT_REFSPEC'
          branch: '{branch}'
      - integration-distribution-scm:
          branch: '{branch}'

    triggers:
      - gerrit:
          server-name: '{gerrit-server-name}'
          trigger-on:
            - comment-added-contains-event:
                comment-contains-value: 'test-{project}-all'
            - comment-added-contains-event:
                comment-contains-value: 'test-{project}-{feature}'
          projects:
            - project-compare-type: 'ANT'
              project-pattern: '{project}'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/{branch}'
          skip-vote:
            successful: true
            failed: true
            unstable: true
            notbuilt: true

    builders:
      - integration-rebase-gerrit-patch
      - wipe-org-opendaylight-repo
      - maven-target:
          maven-version: mvn35
          pom: '{project}/pom.xml'
          goals: |
              clean install dependency:tree
              -Pq
              -Dgitid.skip=false
              -Dmaven.gitcommitid.skip=false
              -DgenerateReports=false
              -Dstream={stream}
              {opendaylight-infra-mvn-opts}
          # {opendaylight-infra-parallel-mvn-opts} is bad when there are multiple big features in SFT.
          java-opts:
            - '-Xmx4096m -XX:MaxPermSize=1024m -Dmaven.compile.fork=true'
          settings: integration-settings
          settings-type: cfp
          global-settings: global-settings
          global-settings-type: cfp
      - maven-target:
          maven-version: mvn35
          pom: distribution/pom.xml
          goals: |
              clean install dependency:tree
              -Pq
              -Dgitid.skip=false
              -Dmaven.gitcommitid.skip=false
              {opendaylight-infra-mvn-opts}
          # {opendaylight-infra-parallel-mvn-opts} is bad when there are multiple big features in SFT.
          java-opts:
            - '-Xmx1024m -XX:MaxPermSize=256m -Dmaven.compile.fork=true'
          settings: integration-settings
          settings-type: cfp
          global-settings: global-settings
          global-settings-type: cfp
      - integration-upload-distribution:
          dist-pom: distribution/pom.xml
      - trigger-builds:
          - project: '{csit-list}'
            block: true
            predefined-parameters: |
              BUNDLE_URL=$BUNDLE_URL
              GERRIT_BRANCH=$GERRIT_BRANCH
              GERRIT_PROJECT=$GERRIT_PROJECT
              GERRIT_REFSPEC=$GERRIT_REFSPEC
              KARAF_VERSION=$KARAF_VERSION

    publishers:
      - email-notification:
          email-recipients: '{email-recipients}'
          email-prefix: '[{project}]'


#####################
# inttest-csit-apex #
#####################

- inttest_csit_apex: &inttest_csit_apex
    name: inttest-csit-apex

    #####################
    # Default variables #
    #####################

    # TODO: Add default variables here

    #####################
    # Job configuration #
    #####################

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: ''
          debug-map: '{debug-map}'
          install-features: '{install-features}'
          use-features-boot: '{use-features-boot}'
      - integration-distribution-branch:
          branch: '{branch}'
      - integration-distribution-stream:
          stream: '{stream}'
      - integration-test-plan:
          test-plan: '{project}-{functionality}.txt'
      - integration-test-suites:
          test-suites: '{test-suites}'
      - integration-patch-refspec:
          branch: 'master'
      - integration-jdk-version:
          jdkversion: '{jre}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'
      - string:
          name: OPENSTACK_BRANCH
          default: '{openstack-branch}'
          description: 'Openstack version to use with devstack'
      - string:
          name: IPSEC_VXLAN_TUNNELS_ENABLED
          default: '{ipsec-vxlan-tunnels-enabled}'
          description: 'Enable ipsec over vxlan support for all controllers and computes'
      - string:
          name: PUBLIC_BRIDGE
          default: '{public-bridge}'
          description: 'Specifies public bridge for provider and external networking'
      - string:
          name: SECURITY_GROUP_MODE
          default: '{security-group-mode}'
          description: 'Security Group Mode to be used in netvirt aclservice config'
      - string:
          name: ENABLE_ITM_DIRECT_TUNNELS
          default: '{enable-itm-direct-tunnels}'
          description: 'Tunnel Configuration mode to be used in genius ifm config'
      - string:
          name: PUBLIC_PHYSICAL_NETWORK
          default: '{public-physical-network}'
          description: 'provider physical network used for flat/vlan networks'
      - string:
          name: ODL_SNAT_MODE
          default: '{odl-snat-mode}'
          description: 'The SNAT mode to be configured - options are conntrack/controller.'

    scm:
      - integration-gerrit-scm:
          basedir: 'test'
          refspec: '$PATCHREFSPEC'
          branch: 'master'

    triggers:
      - timed: '{schedule}'

    builders:
      - lf-infra-pre-build
      - integration-apex-stack-3-type:
          stack-template: '{stack-template}'
          vm_0_count: '{apex_controller_count}'
          vm_0_flavor: '{apex_controller_flavor}'
          vm_0_image: '{apex_controller_image}'
          vm_1_count: '1'
          vm_1_flavor: '{apex_compute_0_flavor}'
          vm_1_image: '{apex_compute_0_image}'
          vm_2_count: '1'
          vm_2_flavor: '{apex_compute_1_flavor}'
          vm_2_image: '{apex_compute_1_image}'
      - integration-install-robotframework
      - integration-detect-variables
      - integration-install-common-functions
      - inject:
          properties-file: 'env.properties'
      - integration-get-apex-addresses
      - inject:
          properties-file: 'slave_addresses.txt'
      - integration-apex-run-tests
      - integration-cleanup-tmp

    publishers:
      - email-notification:
          email-recipients: '{email-recipients}'
          email-prefix: '[{project}]'
      - integration-csit-publish:
          robot_other_files:
            - tempest_results.html
          robot-pass-threshold: 100.0
          robot-unstable-threshold: 0.0
      - lf-infra-publish

- job-template:
    # yamllint disable-line rule:line-length
    name: '{prefix}{project}-csit-{topology}-{os-cmb-cnt}cmb-{os-ctl-cnt}ctl-{os-cmp-cnt}cmp-apex-{openstack}-{functionality}-{stream}'
    id: inttest-csit-apex
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_apex

- job-template:
    # yamllint disable-line rule:line-length
    name: '{prefix}{project}-csit-{topology}-{os-cmb-cnt}cmb-{os-ctl-cnt}ctl-{os-cmp-cnt}cmp-apex-{openstack}-{functionality}-{stream}'
    id: inttest-csit-apex-custom
    <<: *inttest_csit_common
    # yamllint disable-line rule:key-duplicates
    <<: *inttest_csit_apex

    parameters:
      - integration-csit-parameters:
          archive-artifacts: '{archive-artifacts}'
          branch: '{branch}'
          os-cloud: '{os-cloud}'
          # CSIT
          bundle-url: '{bundle-url}'
          repo-url: '{repo-url}'
          robot-options: '{robot-options}'
          # Controller
          controller-scope: ''
          debug-map: '{debug-map}'
          install-features: '{install-features}'
          use-features-boot: '{use-features-boot}'
      - integration-distribution-branch:
          branch: '{branch}'
      - integration-distribution-stream:
          stream: '{stream}'
      - integration-test-plan:
          test-plan: '{testplan}'
      - integration-test-suites:
          test-suites: '{test-suites}'
      - integration-patch-refspec:
          branch: 'master'
      - integration-jdk-version:
          jdkversion: '{jre}'
      - distribution-karaf-version:
          karaf-version: '{karaf-version}'
      - string:
          name: OPENSTACK_BRANCH
          default: '{openstack-branch}'
          description: 'Openstack version to use with devstack'
      - string:
          name: IPSEC_VXLAN_TUNNELS_ENABLED
          default: '{ipsec-vxlan-tunnels-enabled}'
          description: 'Enable ipsec over vxlan support for all controllers and computes'
      - string:
          name: PUBLIC_BRIDGE
          default: '{public-bridge}'
          description: 'Specifies public bridge for provider and external networking'
      - string:
          name: SECURITY_GROUP_MODE
          default: '{security-group-mode}'
          description: 'Security Group Mode to be used in netvirt aclservice config'
      - string:
          name: ENABLE_ITM_DIRECT_TUNNELS
          default: '{enable-itm-direct-tunnels}'
          description: 'Tunnel Configuration mode to be used in genius ifm config'
      - string:
          name: PUBLIC_PHYSICAL_NETWORK
          default: '{public-physical-network}'
          description: 'provider physical network used for flat/vlan networks'
      - string:
          name: ODL_SNAT_MODE
          default: '{odl-snat-mode}'
          description: 'The SNAT mode to be configured - options are conntrack/controller.'
