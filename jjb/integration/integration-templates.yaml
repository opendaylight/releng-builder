# Job templates in this file (please update with every new template):
#
# Old templates:
# {project}-csit-verify-1node-{functionality}-{stream}
# {project}-csit-1node-imds-{functionality}-{install}-{stream}
#
# New (for Be release):
# {project}-csit-verify-1node-{functionality}
# {project}-csit-1node-{functionality}-{install}-{stream}
# {project}-csit-1node-periodic-{functionality}-{install}-{stream}
# {project}-csit-verify-3node-{functionality}
# {project}-csit-3node-{functionality}-{install}-{stream}
# {project}-csit-3node-periodic-{functionality}-{install}-{stream}
#
# Parameters:
#
# project-parameter: main project integration/test ($PROJECT)
# jre: (openjdk7 or openjdk8) Java runtime environment to use when launching ODL
# integration-branch: distribution branch ($BRANCH)
# integration-controller-bundleurl: distribution URL ($BUNDLEURL)
# integration-controller-scope: only or all features ($CONTROLLERSCOPE)
# integration-controller-features: features under test ($CONTROLLER FEATURES)
# integration-test-options: robot options ($TESTOPTIONS)
# integration-test-plan: robot test plan ($TESTPLAN)
# integration-patch-refspec: test branch ($PATCHREFSPEC)



# Old templates

- job-template:
    name: '{project}-csit-verify-1node-{functionality}-{stream}'
    disabled: false

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: 'master'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: 'only'
        - integration-controller-features:
            controller-features: '{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-jdk-version:
            jdkversion: '{jre}'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$GERRIT_REFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 1
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - integration-trigger-patch-submitted:
            name: 'integration/test'
            branch: '{branch}'
            pattern: 'csit/suites/{project}/**'

    builders:
        - integration-cleanup-workspace
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: '*.log,*.log.xz'
        - email-notification:
            email-prefix: '[{project}]'

- job-template:
    name: '{project}-csit-1node-imds-{functionality}-{install}-{stream}'
    disabled: false

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: '{branch}'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: '{scope}'
        - integration-controller-features:
            controller-features: '{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-patch-refspec:
            branch: 'stable/helium'
        - integration-jdk-version:
            jdkversion: '{jre}'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$PATCHREFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 1
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'


    triggers:
        - integration-csit-{install}:
            jobs: '{trigger-jobs}'

    builders:
        - integration-cleanup-workspace
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: '*.log,*.log.xz'
        - email-notification:
            email-prefix: '[{project}]'
        - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-1node-imds-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            keep-records: true
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-1node-imds-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            keep-records: true
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv

# New templates

- job-template:
    name: '{project}-csit-verify-1node-{functionality}'
    disabled: false

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: 'stable/beryllium'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: 'only'
        - integration-controller-features:
            controller-features: '{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-jdk-version:
            jdkversion: 'openjdk7'
            # TODO: Switch to openjdk8 from Boron on.

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$GERRIT_REFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 1
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - integration-trigger-patch-submitted:
            name: 'integration/test'
            branch: 'master'
            pattern: 'csit/suites/{project}/**'

    builders:
        - integration-cleanup-workspace
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: '*.log,*.log.xz'
        - email-notification:
            email-prefix: '[{project}]'

- job-template:
    name: '{project}-csit-1node-{functionality}-{install}-{stream}'
    disabled: false

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: '{branch}'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: '{scope}'
        - integration-controller-features:
            controller-features: '{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-patch-refspec:
            branch: 'master'
        - integration-jdk-version:
            jdkversion: '{jre}'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$PATCHREFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 1
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - integration-csit-{install}:
            jobs: '{trigger-jobs}'

    builders:
        - integration-cleanup-workspace
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: '*.log,*.log.xz'
        - email-notification:
            email-prefix: '[{project}]'
        - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv

- job-template:
    name: '{project}-csit-1node-periodic-{functionality}-{install}-{stream}'
    disabled: false

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: '{branch}'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: '{scope}'
        - integration-controller-features:
            controller-features: '{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-patch-refspec:
            branch: 'master'
        - integration-jdk-version:
            jdkversion: '{jre}'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$PATCHREFSPEC'
            branch: 'master'

    wrappers:
        - integration-jclouds-controller-mininet:
            controller-vms: 1
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - timed: '{schedule}'

    builders:
        - integration-cleanup-workspace
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: '*.log,*.log.xz'
        - email-notification:
            email-prefix: '[{project}]'
        - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '180'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-periodic-1node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '180'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-periodic-1node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv

- job-template:
    name: '{project}-csit-verify-3node-{functionality}'
    disabled: false

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: 'stable/beryllium'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: 'only'
        - integration-controller-features:
            controller-features: 'odl-mdsal-clustering,{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-jdk-version:
            jdkversion: 'openjdk7'
            # TODO: Switch to openjdk8 from Boron on.

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$GERRIT_REFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 3
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - integration-trigger-patch-submitted:
            name: 'integration/test'
            branch: 'master'
            pattern: 'csit/suites/{project}/**'

    builders:
        - integration-cleanup-workspace
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller
        - integration-configure-clustering
        - integration-start-cluster-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: '*.log,*.log.xz'
        - email-notification:
            email-prefix: '[{project}]'

- job-template:
    name: '{project}-csit-3node-{functionality}-{install}-{stream}'
    disabled: false

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: '{branch}'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: '{scope}'
        - integration-controller-features:
            controller-features: 'odl-mdsal-clustering,{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-patch-refspec:
            branch: 'master'
        - integration-jdk-version:
            jdkversion: '{jre}'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$PATCHREFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 3
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - integration-csit-{install}:
            jobs: '{trigger-jobs}'

    builders:
        - integration-cleanup-workspace
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller
        - integration-configure-clustering
        - integration-start-cluster-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: '*.log,*.log.xz'
        - email-notification:
            email-prefix: '[{project}]'
        - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv

- job-template:
    name: '{project}-csit-3node-periodic-{functionality}-{install}-{stream}'
    disabled: false

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: '{branch}'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: '{scope}'
        - integration-controller-features:
            controller-features: 'odl-mdsal-clustering,{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-patch-refspec:
            branch: 'master'
        - integration-jdk-version:
            jdkversion: '{jre}'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$PATCHREFSPEC'
            branch: 'master'

    wrappers:
        - integration-jclouds-controller-mininet:
            controller-vms: 3
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - timed: '{schedule}'

    builders:
        - integration-cleanup-workspace
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller
        - integration-configure-clustering
        - integration-start-cluster-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: '*.log,*.log.xz'
        - email-notification:
            email-prefix: '[{project}]'
        - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-3node-periodic-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-3node-periodic-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
