# Job templates in this file (please update with every new template):
#
# Old templates:
# {project}-csit-verify-1node-{functionality}-{stream}
# {project}-csit-1node-imds-{functionality}-{install}-{stream}
#
# New (for Be release):
# {project}-distribution-test-{stream}
# {project}-csit-verify-1node-{functionality}
# {project}-csit-1node-{functionality}-{install}-{stream}
# {project}-csit-1node-periodic-{functionality}-{install}-{stream}
# {project}-csit-verify-3node-{functionality}
# {project}-csit-3node-{functionality}-{install}-{stream}
# {project}-csit-3node-periodic-{functionality}-{install}-{stream}
#
# Parameters:
#
# project-parameter: main project integration/test ($PROJECT)
# integration-branch: distribution branch ($BRANCH)
# integration-controller-bundleurl: distribution URL ($BUNDLEURL)
# integration-controller-scope: only or all features ($CONTROLLERSCOPE)
# integration-controller-features: features under test ($CONTROLLER FEATURES)
# integration-test-options: robot options ($TESTOPTIONS)
# integration-test-plan: robot test plan ($TESTPLAN)
# integration-patch-refspec: test branch ($PATCHREFSPEC)



# Old templates

- job-template:
    name: '{project}-csit-verify-1node-{functionality}-{stream}'

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: 'master'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: 'only'
        - integration-controller-features:
            controller-features: '{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$GERRIT_REFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 1
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - integration-trigger-patch-submitted:
            name: 'integration/test'
            branch: '{branch}'
            pattern: 'csit/suites/{project}/**'

    builders:
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 0.0
        - archive:
            artifacts: 'karaf.log'
        - email-notification:
            email-prefix: '[{project}]'

- job-template:
    name: '{project}-csit-1node-imds-{functionality}-{install}-{stream}'

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: '{branch}'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: '{scope}'
        - integration-controller-features:
            controller-features: '{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-patch-refspec:
            branch: 'stable/helium'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$PATCHREFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 1
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - reverse:
            jobs: '{trigger-jobs}'
            result: 'success'

    builders:
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: 'karaf.log'
        - email-notification:
            email-prefix: '[{project}]'
        - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-1node-imds-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            keep-records: true
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-1node-imds-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            keep-records: true
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv

# New templates

# Template: {project}-distribution-test-{stream}
# Goal: Build a project patch and make sure this last can deploy with no issues
# Operation: This job template builds a patch, creates a distribution containing the patch, and
# triggers the distribution deploy test at submit time

- job-template:
    name: '{project}-distribution-test-{stream}'

    project-type: maven
    node: dynamic_verify
    jdk: '{jdk}'

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-artifact-num-to-keep}'

    parameters:
        - gerrit-project-parameter:
            project: '$GERRIT_PROJECT'
        - gerrit-refspec-parameter:
            refspec: '$GERRIT_REFSPEC'
        - project-parameter:
            project: '{project}'
        - integration-distribution-git-url

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: '$GERRIT_PROJECT'
            refspec: '$GERRIT_REFSPEC'
            branch: '{branch}'
        - integration-distribution-scm:
            credentials-id: '{ssh-credentials}'
            branch: '{branch}'

    wrappers:
        - build-timeout
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - gerrit:
            server-name: 'OpenDaylight'
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: 'false'
                    exclude-trivial-rebase: 'false'
                    exclude-no-code-change: 'false'
                - draft-published-event
            projects:
              - project-compare-type: 'ANT'
                project-pattern: '{project}'
                branches:
                  - branch-compare-type: 'ANT'
                    branch-pattern: '**/{branch}'
            skip-vote:
                successful: true
                failed: true
                unstable: true
                notbuilt: true

    prebuilders:
        - integration-get-bundle-url
        - inject:
            properties-file: 'bundle.txt'
        - wipe-org-opendaylight-repo
        - provide-maven-settings:
            global-settings-file: '{odl-global-settings}'
            settings-file: '{yangtools-settings}'
        - maven-target:
            maven-version: '{mvn33}'
            pom: '$GERRIT_PROJECT/pom.xml'
            goals: 'clean install -DskipTests -Dmaven.repo.local=/tmp/r -Dorg.ops4j.pax.url.mvn.localRepository=/tmp/r source:jar javadoc:jar'
            java-opts:
                - '-Xmx4096m -XX:MaxPermSize=1024m -Dmaven.compile.fork=true'
            settings: '{integration-settings}'
            global-settings: '{odl-global-settings}'

    maven:
        maven-name: '{mvn33}'
        root-pom: 'distribution/pom.xml'
        goals: 'clean install -Dmaven.repo.local=/tmp/r -Dorg.ops4j.pax.url.mvn.localRepository=/tmp/r source:jar javadoc:jar'
        maven-opts: '-Xmx1024m -XX:MaxPermSize=256m -Dmaven.compile.fork=true'
        settings: '{integration-settings}'
        global-settings: '{odl-global-settings}'
        ignore-upstream-changes: true
        post-step-run-condition: 'SUCCESS'

    postbuilders:
        - trigger-builds:
            - project: 'integration-distribution-deploy-{stream}'
              block: true
              predefined-parameters:
                  BUNDLEURL=$BUNDLEURL

    publishers:
        - email-notification:
            email-prefix: '[{project}]'

- job-template:
    name: '{project}-csit-verify-1node-{functionality}'

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: 'master'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: 'only'
        - integration-controller-features:
            controller-features: '{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$GERRIT_REFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 1
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - integration-trigger-patch-submitted:
            name: 'integration/test'
            branch: 'master'
            pattern: 'csit/suites/{project}/**'

    builders:
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 0.0
        - archive:
            artifacts: 'karaf.log'
        - email-notification:
            email-prefix: '[{project}]'

- job-template:
    name: '{project}-csit-1node-{functionality}-{install}-{stream}'

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: '{branch}'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: '{scope}'
        - integration-controller-features:
            controller-features: '{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-patch-refspec:
            branch: 'master'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$PATCHREFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 1
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - reverse:
            jobs: '{trigger-jobs}'
            result: 'success'

    builders:
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: 'karaf.log'
        - email-notification:
            email-prefix: '[{project}]'
        - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-1node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv

- job-template:
    name: '{project}-csit-1node-periodic-{functionality}-{install}-{stream}'

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: '{branch}'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: '{scope}'
        - integration-controller-features:
            controller-features: '{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-patch-refspec:
            branch: 'master'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$PATCHREFSPEC'
            branch: 'master'

    wrappers:
        - integration-jclouds-controller-mininet:
            controller-vms: 1
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - timed: '{schedule}'

    builders:
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: 'karaf.log'
        - email-notification:
            email-prefix: '[{project}]'
        - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '180'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-periodic-1node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '180'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-periodic-1node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv

- job-template:
    name: '{project}-csit-verify-3node-{functionality}'

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: 'master'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: 'only'
        - integration-controller-features:
            controller-features: 'odl-mdsal-clustering,{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$GERRIT_REFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 3
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - integration-trigger-patch-submitted:
            name: 'integration/test'
            branch: 'master'
            pattern: 'csit/suites/{project}/**'

    builders:
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller
        - integration-configure-clustering
        - integration-start-cluster-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 0.0
        - archive:
            artifacts: '*karaf.log'
        - email-notification:
            email-prefix: '[{project}]'

- job-template:
    name: '{project}-csit-3node-{functionality}-{install}-{stream}'

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: '{branch}'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: '{scope}'
        - integration-controller-features:
            controller-features: 'odl-mdsal-clustering,{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-patch-refspec:
            branch: 'master'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$PATCHREFSPEC'
            branch: 'master'

    wrappers:
        - build-timeout
        - integration-jclouds-controller-mininet:
            controller-vms: 3
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - reverse:
            jobs: '{trigger-jobs}'
            result: 'success'

    builders:
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller
        - integration-configure-clustering
        - integration-start-cluster-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: '*karaf.log'
        - email-notification:
            email-prefix: '[{project}]'
        - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-3node-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv

- job-template:
    name: '{project}-csit-3node-periodic-{functionality}-{install}-{stream}'

    project-type: freestyle
    node: dynamic_robot

    logrotate:
        daysToKeep: '{build-days-to-keep}'
        numToKeep: '{build-num-to-keep}'
        artifactDaysToKeep: '{build-artifact-days-to-keep}'
        artifactNumToKeep: '{build-num-to-keep}'

    parameters:
        - project-parameter:
            project: 'integration/test'
        - integration-branch:
            branch: '{branch}'
        - integration-bundleurl:
            bundleurl: 'last'
        - integration-controller-scope:
            controller-scope: '{scope}'
        - integration-controller-features:
            controller-features: 'odl-mdsal-clustering,{install-features}'
        - integration-test-options:
            test-options: '{robot-options}'
        - integration-test-plan:
            test-plan: '{project}-{functionality}.txt'
        - integration-patch-refspec:
            branch: 'master'

    scm:
        - integration-gerrit-scm:
            credentials-id: '{ssh-credentials}'
            basedir: 'test'
            refspec: '$PATCHREFSPEC'
            branch: 'master'

    wrappers:
        - integration-jclouds-controller-mininet:
            controller-vms: 3
            mininet-image: '{mininet-image}'
            mininet-vms: '{mininet-vms}'
            mininet-cloud-name: '{mininet-cloud-name}'
        - ssh-agent-credentials:
            users:
                - '{ssh-credentials}'

    triggers:
        - timed: '{schedule}'

    builders:
        - integration-install-robotframework
        - inject:
            properties-file: 'env.properties'
        - integration-get-slave-addresses
        - inject:
            properties-file: 'slave_addresses.txt'
        - integration-get-bundle-vars
        - inject:
            properties-file: 'bundle_vars.txt'
        - integration-deploy-controller
        - integration-configure-clustering
        - integration-start-cluster-run-test
        - integration-cleanup-tmp

    publishers:
        - integration-robot:
            unstable-if: 0.0
            pass-if: 100.0
        - archive:
            artifacts: '*karaf.log'
        - email-notification:
            email-prefix: '[{project}]'
        - plot:
          - title: '{01-plot-title}'
            yaxis: '{01-plot-yaxis}'
            group: '{01-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-3node-periodic-{functionality}-{install}-{stream}-{01-plot-data-file}-history.csv'
            series:
              - file: '{01-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
          - title: '{02-plot-title}'
            yaxis: '{02-plot-yaxis}'
            group: '{02-plot-group}'
            num-builds: '5400'
            style: line
            use-description: false
            csv-file-name: '{project}-csit-3node-periodic-{functionality}-{install}-{stream}-{02-plot-data-file}-history.csv'
            series:
              - file: '{02-plot-data-file}'
                inclusion-flag: 'off'
                display-table: true
                format: csv
