---
- project:
    name: ovsdb-sonar
    jobs:
      - 'ovsdb-sonar'

    project: 'ovsdb'
    jdk: 'openjdk8'

- job-template:
    name: 'ovsdb-sonar'

    project-type: freestyle
    node: centos7-docker-2c-4g
    jdk: '{jdk}'

    properties:
      - opendaylight-infra-properties:
          build-days-to-keep: 7

    parameters:
      - opendaylight-infra-parameters:
          os-cloud: '{os-cloud}'
          project: '{project}'
          branch: '{branch}'
          refspec: 'refs/heads/{branch}'
          artifacts: '{archive-artifacts}'

    scm:
      - git-scm:
          refspec: ''
          branch: 'master'

    wrappers:
      - opendaylight-infra-wrappers:
          build-timeout: '{build-timeout}'

    triggers:
      - timed: '{schedule-saturday}'
      - gerrit-trigger-patch-sonar:
          server-name: '{server-name}'
          name: 'ovsdb'

    builders:
      - shell: !include-raw-escape: setup-docker.sh
      - inject:
          properties-file: env.properties
      - shell: !include-raw-escape: include-setup-hwvtep-docker.sh
      - maven-target:
          maven-version: 'mvn33'
          pom: 'pom.xml'
          goals: >
              clean install dependency:tree -V -B -Dsonar
              -Dskip.karaf.featureTest=true -Dmaven.compile.fork=true
              -Dmaven.repo.local=/tmp/r -Dorg.ops4j.pax.url.mvn.localRepository=/tmp/r
          java-opts:
            - '-Xmx1024m -XX:MaxPermSize=256m'
          settings: 'ovsdb-settings'
          settings-type: cfp
          global-settings: 'global-settings'
          global-settings-type: cfp
      - inject:
          properties-file: env.properties
      - maven-target:
          maven-version: 'mvn33'
          pom: 'pom.xml'
          goals: >
              verify -V -B -Pintegrationtest -Dsonar
              -Dskip.karaf.featureTest=true
              -Dovsdb.controller.address=${{CONTROLLER_IP}}
              Dmaven.repo.local=/tmp/r -Dorg.ops4j.pax.url.mvn.localRepository=/tmp/r
          properties:
            - 'ovsdbserver.ipaddress=127.0.0.1'
            - 'ovsdbserver.port=6641'
            - 'ovsdb.userspace.enabled=yes'
          settings: 'ovsdb-settings'
          settings-type: cfp
          global-settings: 'global-settings'
          global-settings-type: cfp
      - maven-target:
          maven-version: 'mvn33'
          # We should switch to the recommended configuration of sonar once
          # JJB adds support for configurating the Sonar wrapper:
          #    http://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+Jenkins
          goals: >
              sonar:sonar -V -B -Djenkins -Dsonar
              -Dsonar.host.url=https://sonar.opendaylight.org
              -Dmaven.repo.local=/tmp/r -Dorg.ops4j.pax.url.mvn.localRepository=/tmp/r
          settings: 'ovsdb-settings'
          settings-type: cfp
          global-settings: 'global-settings'
          global-settings-type: cfp
      - shell: !include-raw-escape: cleanup-docker.sh
      - jacoco-nojava-workaround

    publishers:
      - email-notification:
          email-recipients: '{email-recipients}'
          email-prefix: '[ovsdb]'
      - jacoco-report
      - lf-infra-publish
