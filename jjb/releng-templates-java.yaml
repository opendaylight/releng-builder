---
- job-group:
    name: odl-maven-jobs-jdk11

    jobs:
      - gerrit-maven-clm:
          nexus-iq-namespace: odl-
          nexus-iq-stage: release

      - gerrit-maven-merge:
          build-timeout: 180

      - gerrit-maven-stage:
          sign-artifacts: true
          sbom-generator: true
          cron: ""

      - gerrit-maven-mri-stage:
          sbom-generator: true
          sign-artifacts: true
          cron: ""

    java-version: openjdk11
    mvn-version: mvn38

- job-group:
    name: odl-maven-jobs-jdk17

    jobs:
      - gerrit-maven-clm:
          nexus-iq-namespace: odl-
          nexus-iq-stage: release
          mvn-opts: "--add-opens java.base/java.util=ALL-UNNAMED"

      - gerrit-maven-merge:
          build-timeout: 180

      - gerrit-maven-stage:
          sbom-generator: true
          sign-artifacts: true
          cron: ""

      - gerrit-maven-mri-stage:
          sbom-generator: true
          sign-artifacts: true
          cron: ""

    java-version: openjdk17
    mvn-version: mvn38

- job-group:
    name: odl-maven-jobs-jdk21

    jobs:
      - gerrit-maven-clm:
          nexus-iq-namespace: odl-
          nexus-iq-stage: release
          mvn-opts: "--add-opens java.base/java.util=ALL-UNNAMED"

      - gerrit-maven-merge:
          build-timeout: 180

      - gerrit-maven-stage:
          sbom-generator: true
          sign-artifacts: true
          cron: ""

      - gerrit-maven-mri-stage:
          sbom-generator: true
          sign-artifacts: true
          cron: ""

    java-version: openjdk21
    mvn-version: mvn39

- job-group:
    name: odl-maven-verify-jobs

    jobs:
      - gerrit-maven-verify
      - gerrit-maven-verify-dependencies:
          build-timeout: 180

    mvn-version: mvn38

- job-group:
    name: odl-maven-verify-jobs-jdk17

    jobs:
      - gerrit-maven-verify
      - gerrit-maven-verify-dependencies:
          build-timeout: 180

    java-version: openjdk17
    mvn-version: mvn38

- job-group:
    name: odl-maven-verify-jobs-jdk21

    jobs:
      - gerrit-maven-verify
      - gerrit-maven-verify-dependencies:
          build-timeout: 180

    java-version: openjdk21
    mvn-version: mvn39

- job-group:
    name: odl-sonar-jobs-jdk17

    jobs:
      - gerrit-maven-sonar

    java-version: openjdk17
    mvn-version: mvn38
    sonarcloud: true
    sonarcloud-java-version: openjdk17
    sonarcloud-project-organization: "{sonarcloud_project_organization}"
    sonarcloud-api-token: "{sonarcloud_api_token}"
    sonarcloud-project-key: "{sonarcloud_project_organization}_{project-name}"

- job-group:
    name: odl-sonar-jobs-jdk21

    jobs:
      - gerrit-maven-sonar

    java-version: openjdk21
    mvn-version: mvn39
    sonarcloud: true
    sonarcloud-java-version: openjdk21
    sonarcloud-project-organization: "{sonarcloud_project_organization}"
    sonarcloud-api-token: "{sonarcloud_api_token}"
    sonarcloud-project-key: "{sonarcloud_project_organization}_{project-name}"

- job-template:
    name: "{project-name}-integration-{stream}"

    ######################
    # Default parameters #
    ######################

    archive-artifacts: >
      **/*.log
      **/hs_err_*.log
      **/target/**/feature.xml
      **/target/failsafe-reports/failsafe-summary.xml
      **/target/surefire-reports/*-output.txt
    mvn-goals: clean install
    disable-job: false
    jacoco-exclude-pattern: "**/gen/**,\
      **/generated-sources/**,\
      **/yang-gen**,\
      **/pax/**"

    #####################
    # Job Configuration #
    #####################

    project-type: freestyle
    node: "{build-node}"
    jdk: "{java-version}"
    disabled: "{disable-job}"

    properties:
      - opendaylight-infra-properties:
          build-days-to-keep: "{build-days-to-keep}"

    parameters:
      - opendaylight-infra-parameters:
          os-cloud: "{os-cloud}"
          project: "{project}"
          branch: "{branch}"
          refspec: "refs/heads/{branch}"
          artifacts: "{archive-artifacts}"

    scm:
      - git-scm:
          refspec: ""
          branch: "{branch}"

    wrappers:
      - opendaylight-infra-wrappers:
          build-timeout: "{build-timeout}"

    triggers:
      - reverse:
          jobs: "{dependencies}"
          result: "success"

    builders:
      - lf-jacoco-nojava-workaround
      - lf-provide-maven-settings:
          global-settings-file: "global-settings"
          settings-file: "{mvn-settings}"
      - maven-target:
          maven-version: "mvn35"
          goals: |
            {mvn-goals}
            {opendaylight-infra-mvn-opts}
          java-opts:
            - "{mvn-opts}"
          settings: "{mvn-settings}"
          settings-type: cfp
          global-settings: "global-settings"
          global-settings-type: cfp

    publishers:
      - email-notification:
          email-recipients: "{email-recipients}"
          email-prefix: "{email-upstream}"
      - findbugs
      - lf-jacoco-report:
          exclude-pattern: "{jacoco-exclude-pattern}"
      - lf-infra-publish

- job-template:
    name: "{project-name}-merge-{stream}"

    ######################
    # Default parameters #
    ######################
    disable-job: "false"
    jacoco-exclude-pattern: "**/gen/**,\
      **/generated-sources/**,\
      **/yang-gen**,\
      **/pax/**"

    archive-artifacts: >
      **/*.log
      **/hs_err_*.log
      **/target/**/feature.xml
      **/target/failsafe-reports/failsafe-summary.xml
      **/target/surefire-reports/*-output.txt
    cron: "0 0 * * tue,sat"
    mvn-opts: ""
    mvn-version: mvn35

    #####################
    # Job Configuration #
    #####################

    # Need to keep jobs that deploy to Nexus at end of build as Maven
    # projects. Maybe reconsider this once upstream moves deploy to a
    # separate lifecycle:
    #     https://issues.apache.org/jira/browse/MNG-5666
    project-type: maven
    node: "{build-node}"
    jdk: "{java-version}"
    disabled: "{disable-job}"

    properties:
      - opendaylight-infra-properties:
          build-days-to-keep: 14

    parameters:
      - opendaylight-infra-parameters:
          os-cloud: "{os-cloud}"
          project: "{project}"
          branch: "{branch}"
          refspec: "refs/heads/{branch}"
          artifacts: "{archive-artifacts}"
      - string:
          name: STREAM
          default: "{stream}"
          description: "String representing release name"

    scm:
      - gerrit-trigger-scm:
          refspec: ""
          choosing-strategy: "default"

    wrappers:
      - opendaylight-infra-wrappers:
          build-timeout: "{build-timeout}"

    triggers:
      - timed: "{obj:cron}"
      - gerrit-trigger-patch-merged:
          gerrit-server-name: "{gerrit-server-name}"
          name: "{project}"
          branch: "{branch}"
          files: "**"
          forbidden-files: ""

    prebuilders:
      - lf-jacoco-nojava-workaround
      - lf-provide-maven-settings:
          global-settings-file: "global-settings"
          settings-file: "{mvn-settings}"
      - lf-maven-install:
          mvn-version: "{mvn-version}"

    # TODO: Do we want to apply sophisticated checks as in *-distribution-check-*?
    maven:
      maven-name: "{mvn-version}"
      goals: >
        {mvn-goals}
        -Dmerge
        -Dstream={stream}
        {opendaylight-infra-mvn-opts}
      maven-opts: "{mvn-opts}"
      settings: "{mvn-settings}"
      settings-type: cfp
      global-settings: "global-settings"
      global-settings-type: cfp
      post-step-run-condition: UNSTABLE

    reporters:
      - findbugs

    publishers:
      - email-notification:
          email-recipients: "{email-recipients}"
          email-prefix: "[{project-name}]"
      - maven-deploy:
          id: ""
          unique-version: true
          deploy-unstable: false
      - lf-jacoco-report:
          exclude-pattern: "{jacoco-exclude-pattern}"
      - lf-infra-publish
