---
- project:
    name: netvirt-sonar
    jobs:
      - 'netvirt-sonar'

    project: 'netvirt'
    jdk: 'openjdk8'
    archive-artifacts: '*.log'

- builder:
    name: install-docker-composeSonar
    builders:
      - shell: |
          virtualenv $WORKSPACE/venv
          source $WORKSPACE/venv/bin/activate
          pip install --upgrade pip
          pip install docker-compose

- job-template:
    name: 'netvirt-sonar'

    project-type: freestyle
    node: centos7-docker-2c-4g
    jdk: '{jdk}'

    properties:
      - opendaylight-infra-properties:
          build-days-to-keep: 7

    parameters:
      - opendaylight-infra-parameters:
          project: '{project}'
          branch: '{branch}'
          refspec: 'refs/heads/{branch}'
          artifacts: '{archive-artifacts}'

    scm:
      - git-scm:
          refspec: ''
          branch: 'master'

    wrappers:
      - opendaylight-infra-wrappers:
          build-timeout: '{build-timeout}'

    triggers:
      - timed: 'H H * * 6'
      - gerrit-trigger-patch-sonar:
          server-name: '{server-name}'
          name: 'netvirt'

    builders:
      - shell: !include-raw-escape: include-setup-misc.sh
      - inject:
          properties-file: env.properties
      - install-docker-composeSonar
      - maven-target:
          maven-version: 'mvn33'
          pom: 'pom.xml'
          goals: >
              clean install dependency:tree -V -B -Dsonar
              -Dskip.karaf.featureTest=true -Dmaven.compile.fork=true
              -Dmaven.repo.local=/tmp/r -Dorg.ops4j.pax.url.mvn.localRepository=/tmp/r
          java-opts:
            - '-Xmx1024m -XX:MaxPermSize=256m'
          settings: 'netvirt-settings'
          settings-type: cfp
          global-settings: 'odl-global-settings'
          global-settings-type: cfp
      - inject:
          properties-file: env.properties
      - maven-target:
          maven-version: 'mvn33'
          pom: 'vpnservice/it/pom.xml'
          goals: >
              verify -V -B -l netvirt-vpnservice-sonar.log
              -Pintegrationtest -Dsonar -Dskip.karaf.featureTest=true
              -Dovsdb.controller.address=${{CONTROLLER_IP}}
              -Ddocker.compose.file=ovs-2.5.0-hwvtep.yml
              -Ddocker.vEnvWs=$WORKSPACE
              -Dsgm=transparent
          properties:
            - 'maven.repo.local=/tmp/r'
            - 'org.ops4j.pax.url.mvn.localRepository=/tmp/r'
          settings: 'netvirt-settings'
          settings-type: cfp
          global-settings: 'odl-global-settings'
          global-settings-type: cfp
      - maven-target:
          maven-version: 'mvn33'
          pom: 'openstack/net-virt-it/pom.xml'
          goals: >
              verify -V -B -l net-virt-sonar.log
              -Pintegrationtest -Dsonar -Dskip.karaf.featureTest=true
              -Dovsdb.controller.address=${{CONTROLLER_IP}}
              -Ddocker.compose.file=ovs-2.5.0-hwvtep.yml
              -Ddocker.vEnvWs=$WORKSPACE
              -Dsgm=transparent
          properties:
            - 'maven.repo.local=/tmp/r'
            - 'org.ops4j.pax.url.mvn.localRepository=/tmp/r'
          settings: 'netvirt-settings'
          settings-type: cfp
          global-settings: 'odl-global-settings'
          global-settings-type: cfp
      - shell: !include-raw-escape: include-raw-setup-docker.sh
      - inject:
          properties-file: env.properties
      - maven-target:
          maven-version: 'mvn33'
          pom: 'openstack/net-virt-sfc/it/pom.xml'
          goals: >
              verify -V -B -l openstack/net-virt-sfc-sonar.log
              -Pintegrationtest -Dsonar
              -Dskip.karaf.featureTest=true
              -Dovsdb.controller.address=${{CONTROLLER_IP}}
              -Dsgm=transparent
          properties:
            - 'maven.repo.local=/tmp/r'
            - 'org.ops4j.pax.url.mvn.localRepository=/tmp/r'
            - 'ovsdbserver.ipaddress=127.0.0.1'
            - 'ovsdbserver.port=6641'
            - 'ovsdb.userspace.enabled=yes'
          settings: 'netvirt-settings'
          settings-type: cfp
          global-settings: 'odl-global-settings'
          global-settings-type: cfp
      - maven-target:
          maven-version: 'mvn33'
          # We should switch to the recommended configuration of sonar once
          # JJB adds support for configurating the Sonar wrapper:
          #    http://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+Jenkins
          goals: >
              sonar:sonar -V -B -Djenkins
              -Dsonar -Dsonar.host.url=https://sonar.opendaylight.org
              -Dmaven.repo.local=/tmp/r
              -Dorg.ops4j.pax.url.mvn.localRepository=/tmp/r
          settings: 'netvirt-settings'
          settings-type: cfp
          global-settings: 'odl-global-settings'
          global-settings-type: cfp
      - shell: !include-raw-escape: include-raw-cleanup-docker.sh
      - jacoco-nojava-workaround

    publishers:
      - email-notification:
          email-recipients: '{email-recipients}'
          email-prefix: '[netvirt]'
      - jacoco-report
      - findbugs
      - opendaylight-infra-shiplogs:
          maven-version: 'mvn33'
