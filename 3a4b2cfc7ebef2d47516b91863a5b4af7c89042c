{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "58ea0840_d2a18836",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 8144
      },
      "writtenOn": "2024-08-22T15:50:33Z",
      "side": 1,
      "message": "Relates to https://git.opendaylight.org/gerrit/c/integration/test/+/113171",
      "revId": "3a4b2cfc7ebef2d47516b91863a5b4af7c89042c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c134f7d_6c7ff170",
        "filename": "jjb/netconf/netconf-userfeatures-netty.yaml",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1927
      },
      "writtenOn": "2024-08-22T16:29:24Z",
      "side": 1,
      "message": "I guess Netty-based RESTCONF server is for Titanium or is this going to be used for Scandium, too?\n\nIf the feature is for Titanium, then it would be better to rebase this on top of the scandium branch-cut change:\nhttps://git.opendaylight.org/gerrit/c/releng/builder/+/113112",
      "revId": "3a4b2cfc7ebef2d47516b91863a5b4af7c89042c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f019801c_cc75ea5d",
        "filename": "jjb/netconf/netconf-userfeatures-netty.yaml",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 8144
      },
      "writtenOn": "2024-08-23T12:38:34Z",
      "side": 1,
      "message": "Originally, for Scandium, we are trying to finish it into NETCONF-8.0.1.",
      "parentUuid": "3c134f7d_6c7ff170",
      "revId": "3a4b2cfc7ebef2d47516b91863a5b4af7c89042c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9321a30_77a178b6",
        "filename": "jjb/netconf/netconf-userfeatures-netty.yaml",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1927
      },
      "writtenOn": "2024-08-23T15:48:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f019801c_cc75ea5d",
      "revId": "3a4b2cfc7ebef2d47516b91863a5b4af7c89042c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45b4e338_a4b57656",
        "filename": "jjb/netconf/netconf-userfeatures-netty.yaml",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1927
      },
      "writtenOn": "2024-08-22T16:29:24Z",
      "side": 1,
      "message": "The only difference in terms of test configuration is this custom `RESTCONFPORT`.\nIt\u0027s not clear to me how this is supposed to work. Will there be two RESTCONF servers, one on 8181 \u0026 the other on 8182 and the former is used for `userfeatures` with Jetty-based server and the latter is used for `userfeatures-netty` with Netty-based server?\n\nCurrently this CSIT job combined with [integration test 113171/3](https://git.opendaylight.org/gerrit/c/integration/test/+/113171/3) doesn\u0027t work.",
      "revId": "3a4b2cfc7ebef2d47516b91863a5b4af7c89042c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b9a04af_b6f44b52",
        "filename": "jjb/netconf/netconf-userfeatures-netty.yaml",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1927
      },
      "writtenOn": "2024-08-22T16:30:46Z",
      "side": 1,
      "message": "https://jenkins.opendaylight.org/sandbox/view/All/job/netconf-csit-1node-userfeatures-netty-all-scandium/2/",
      "parentUuid": "45b4e338_a4b57656",
      "revId": "3a4b2cfc7ebef2d47516b91863a5b4af7c89042c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afc4c8db_af10ab48",
        "filename": "jjb/netconf/netconf-userfeatures-netty.yaml",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 8144
      },
      "writtenOn": "2024-08-23T12:38:34Z",
      "side": 1,
      "message": "Yes, there will be:\n\nJAXRS restconf (the current implementation) on port 8181.\nNetty (a new, alternative endpoint) on port 8182.\n\nIMO its expected that test fails, because we want to have:\n\n1. jobs ready\n2. merge netconf patch and see if it works",
      "parentUuid": "8b9a04af_b6f44b52",
      "revId": "3a4b2cfc7ebef2d47516b91863a5b4af7c89042c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "815cd4f8_d3935e31",
        "filename": "jjb/netconf/netconf-userfeatures-netty.yaml",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1927
      },
      "writtenOn": "2024-08-23T15:48:58Z",
      "side": 1,
      "message": "Looks like it\u0027s not merged yet, so test wouldn\u0027t pass.",
      "parentUuid": "afc4c8db_af10ab48",
      "revId": "3a4b2cfc7ebef2d47516b91863a5b4af7c89042c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label \t\t\tfrom a non-uploader. A minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3a4b2cfc7ebef2d47516b91863a5b4af7c89042c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ODL Required.GHA\u0027 and \t\t\tone other CI or committer that is a non-uploader is \t\t\trequired for the \u0027Verified\u0027 label. A minimum vote is \t\t\tblocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003dodl.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=odl.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=odl.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3a4b2cfc7ebef2d47516b91863a5b4af7c89042c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}