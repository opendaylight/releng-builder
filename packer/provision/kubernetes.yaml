---

- hosts: coe-all
  vars:
    openvswitch_version: 2.8.2
    openvswitch_checksum: sha256:87b4a7e7134a44ce1f808d3415a2244b4518c2b0b2a42fa2f8231e592f13103d
    k8s_version: 1.9.4

  roles:
    - fkautz.bridge-utils-install
    - fkautz.openvswitch-install
    - fkautz.docker-install
    # - lfit.docker-install
    - fkautz.kubernetes-install

- hosts: coe-examples
  tasks:
    - name: Make example directory
      file:
        path: /home/vagrant/examples
        state: directory
    - name: Copy example files to example directory
      synchronize:
        src: ../provision/examples/
        dest: /home/vagrant/examples/

- hosts: coe-configure
  tasks:
    - name: Download golang
      get_url:
        url: "https://dl.google.com/go/go{{ go_version }}.linux-amd64.tar.gz"
        dest: "{{ ansible_env.HOME }}/go{{ go_version }}.linux-amd64.tar.gz"
        mode: 0600
      creates: "{{ ansible_env.HOME }}/go{{ go_version }}.linux-amd64.tar.gz"

- hosts: coe-configure
  vars:
    gopath: "{{ ansible_env.HOME}}/go"
    coe_path: "{{ gopath }}/src/git.opendaylight.org/gerrit/p/coe.git"
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"
    GOPATH: "{{ gopath }}"
  tasks:
    - name: Make CNI config directory
      file:
        path: /etc/cni/net.d
        state: directory
      become: true
    - name: Generate cni config
      template:
        src: templates/odlovs-cni.conf.j2
        dest: /etc/cni/net.d/odlovs-cni.conf
      become: true
    - name: Untar go to /usr/local
      unarchive:
        src: "{{ ansible_env.HOME }}/go{{ go_version }}.linux-amd64.tar.gz"
        dest: /usr/local
        creates: /usr/local/go
      become: true
    - name: Create $HOME/go/bin
      file:
        path: "{{ ansible_env.HOME }}/go/bin"
        state: directory
    - name: Install glide
      shell: curl https://glide.sh/get | sh
      args:
        creates: "{{ gopath }}/bin/glide"
    - name: Fetch COE git repository
      git:
        repo: 'https://git.opendaylight.org/gerrit/p/coe.git'
        dest: "{{ coe_path }}"
    - name: Fetch odl-cni dependencies with glide
      shell: glide install -v
      args:
        chdir: "{{ coe_path }}/odlCNIPlugin/odlovs-cni"
        creates: "{{ coe_path }}/odlCNIPlugin/odlovs-cni/vendor"
    - name: Build odlovs-cni
      shell: go build
      args:
        chdir: "{{ coe_path }}/odlCNIPlugin/odlovs-cni"
        creates: "{{ coe_path }}/odlCNIPlugin/odlovs-cni/odlovs-cni"
    - name: Install odlovs-cni
      copy:
        src: "{{ coe_path }}/odlCNIPlugin/odlovs-cni/odlovs-cni"
        dest: "/opt/cni/bin/odlovs-cni"
        remote_src: true
        mode: 0755
      become: true

- hosts: coe-configure
  tasks:
    - name: Set OVS Manager
      shell: ovs-vsctl set-manager tcp:{{ manager_ip }}:{{ manager_port }} && touch /tmp/ovs-set-manager
      args:
        creates: /tmp/ovs-set-manager
      become: true
    - name: Enable auto-tunnelling
      shell: ovs-vsctl set O . other_config:local_ip={{ overlay_ip }} && touch /tmp/enable-auto-tunnel
      args:
        creates: /tmp/enable-auto-tunnel
      become: true

- hosts: coe-configure-watcher
  vars:
    gopath: "{{ ansible_env.HOME}}/go"
    coe_path: "{{ gopath }}/src/git.opendaylight.org/gerrit/p/coe.git"
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"
    GOPATH: "{{ gopath }}"
  tasks:
    - name: Fetch watcher dependencies with glide
      shell: glide install -v
      args:
        chdir: "{{ coe_path }}/watcher"
        creates: "{{ coe_path }}/watcher/vendor"
    - name: Build watcher
      shell: go build
      args:
        chdir: "{{ coe_path }}/watcher"
        creates: "{{ coe_path }}/watcher/watcher"
    - name: Copy watcher to /usr/local/bin
      copy:
        src: "{{ coe_path }}/watcher/watcher"
        dest: /usr/local/bin/watcher
        mode: 0755
        remote_src: true
      become: true

- hosts: coe-run-master
  tasks:
    - name: Disable swapfile
      shell: swapoff -a
      become: true
    - name: Run kubeadm init
      shell: kubeadm init --apiserver-advertise-address={{ k8s_advertise_address }} > /tmp/k8s-output
      args:
        creates: /tmp/k8s-output
      become: true
    - name: Create join script
      shell: echo "#!/bin/sh" > /tmp/join-k8s.sh && cat /tmp/k8s-output | grep "kubeadm join" | sed -e 's/^[[:space:]]*//g' >> /tmp/join-k8s.sh
      args:
        creates: /tmp/join-k8s.sh
    - name: Fetch join script
      fetch:
        src: /tmp/join-k8s.sh
        dest: ../tmp/join-k8s.sh
        flat: true
    - name: Make kube directory
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
    - name: Copy kubeconfig
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: true
      become: true

- hosts: coe-run-watcher
  tasks:
    - name: Run watcher
      shell: nohup watcher odl </dev/null >/tmp/watcher.out 2>&1 &
      args:
#        creates: /tmp/watcher.out
#
#- hosts: coe-run-minions
#  tasks:
#    - name: Disable swapfile
#      shell: swapoff -a
#      become: true
#    - name: Copy join file
#      copy:
#        src: ../tmp/join-k8s.sh
#        dest: /tmp/join-k8s.sh
#        mode: 0700
#      become: true
#    - name: Join cluster
#      shell: /tmp/join-k8s.sh
#      become: true
